<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="inboundMapper">	
	<resultMap type="GBLStatus" id="StatusMap">
		<result column="gbl_no" property="no"/>
		<result column="gbl_input" property="input" />
		<result column="gbl_weight" property="weight" />
		<result column="gbl_custom" property="custom" />
		<result column="gbl_onHandList" property="onHandList" />
		<result column="gbl_delivery" property="delivery" />
		<result column="gbl_invoice" property="invoice" />
	</resultMap>

	<resultMap type="GBLAttachment" id="GBLAttachmentMap">
		<result column="seq" property="seq"/>
		<result column="gbl_no" property="gblNo"/>
		<result column="file_name" property="fileName"/>
		<result column="file_path" property="filePath"/>
		<result column="file_extension" property="fileExtension"/>
		<result column="file_size" property="fileSize"/>
		<result column="gbl_file_no" property="gblFileNo"/>
		<result column="gbl_update_date" property="gblUpdateDate"/>
	</resultMap>

	<resultMap type="Dd619" id="Dd619Map">
		<result column="seq" property="seq"/>
		<result column="gbl_no" property="gblNo"/>
		<result column="date" property="date"/>
		<result column="name" property="name"/>
		<result column="ssn" property="ssn"/>
		<result column="rank" property="rank"/>
		<result column="origin_of_shipment" property="originOfShipment"/>
		<result column="destination" property="destination"/>
		<result column="ordering_activity_name" property="orderingActivityName"/>
		<result column="carrier_name" property="carrierName"/>
		<result column="agent_name" property="agentName"/>
		<result column="signature" property="signature"/>
		<result column="carrier_shipment_reference" property="carrierShipmentReference"/>
		<result column="code" property="code"/>
		<result column="other" property="other"/>
		<result column="total" property="total"/>
		<result column="remark" property="remark"/>
		<result column="officer_material" property="officerMaterial"/>
		<result column="officer_signature" property="officerSignature"/>
		<result column="officer_date" property="officerDate"/>
		<result column="rank_and_name" property="rankAndName"/>
		<result column="transportation_date" property="transportationDate"/>
		<result column="gbl_seq" property="gblSeq"/>
		<result column="write_date" property="writeDate"/>
		<result column="write_user" property="writeUser"/>
		<result column="memorandum_list_seq" property="memorandumListSeq"/>
	</resultMap>
	
	<resultMap type="onHandList" id="onHandListFormMap">
		<result column="onHandDate" property="onHandDate" />
		<result column="firstArrivalableDeliverDate" property="firstArrivalableDeliverDate" />
		<result column="onHandListContentSeq" property="onHandListContent.seq" />
		<result column="by" property="onHandListContent.by" />
		<result column="shipperName" property="onHandListContent.gbl.shipperName" />
		<result column="rank" property="onHandListContent.gbl.rank" />
		<result column="ssn" property="onHandListContent.gbl.ssn" />
		<result column="area" property="onHandListContent.gbl.areaLocal"/>
		<result column="gblNo" property="onHandListContent.gbl.gblNo" />
		<result column="code" property="onHandListContent.gbl.code" />
		<result column="pud" property="onHandListContent.gbl.pud" />
		<result column="rdd" property="onHandListContent.gbl.rdd" />
		<result column="piece" property="onHandListContent.weight.piece" />
		<result column="gross" property="onHandListContent.weight.gross" />
		<result column="net" property="onHandListContent.weight.net" />
		<result column="cuft" property="onHandListContent.weight.cuft"/>
	</resultMap>

	<select id="getFreightListCount" parameterType="InboundFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			gbl_ib
		WHERE
			1 = 1
			<if test="area != null and area != ''">
				AND
					area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
			</if>
			<if test="branch != null and branch != ''">
				AND		
					area = #{branch}			
			</if>
			<if test="carrier != null and carrier != ''">
				AND
					tsp = #{carrier}
			</if>
			<if test="code != null and code != ''">
				AND
					code = #{code}
			</if>
			<if test="startPud != null and startPud != ''">
				AND
					pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
			</if>
			<if test="endPud != null and endPud != ''">
				AND
					pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
			</if>
			<if test="searchContent != null and searchContent != ''">
				<choose>
					<when test="searchTitle == 'name'">
						AND
							shipperName like CONCAT(CONCAT('%' , #{searchContent} ), '%')
					</when>
					<when test="searchTitle == 'ssn'">
						AND
							ssn like CONCAT(CONCAT('%' , #{searchContent} ), '%')
					</when>
					<when test="searchTitle == 'gblNo'">
						AND
							gblNo like CONCAT(CONCAT('%' , #{searchContent} ), '%')
					</when>
				</choose>				
			</if>
		
	</select>
	
	<select id="getFreightList" parameterType="InboundFilter" resultType="GBL">
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					g.seq,
					g.gblNo,
					g.shipperName,
					g.rank,
					g.code,
					g.tsp,
					g.destAddress,
					g.pud,
					g.rdd,
					g.arriveDate,
					g.awbNo,
					g.ssn,
					g.pmjDate,
					g.area AS areaLocal,
					g.fright,
					g.eMailAddress,
					g.oblNo,
					g.vessle,
					g.blCompany,
					g.remark,
					g.eta,
					g.sitIn,
					g.sitOut,
					g.sitNo,
					g.rate,
					g.yjNo,
					g.totalPcs,
					g.phone,
					g.address,
					g.onHandDate,
					g.gbloc,
					g.destinationGbloc,
					g.itemsPieces,
					g.grossWeight,
					g.netWeight,
					g.storedAt
				FROM
					gbl_ib g, (SELECT @rownum := 0) r
				WHERE
					1 = 1
					<if test="area != null and area != ''">
						AND
							area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
					</if>
					<if test="branch != null and branch != ''">
						AND		
							area = #{branch}			
					</if>
					<if test="carrier != null and carrier != ''">
						AND
							tsp = #{carrier}
					</if>
					<if test="code != null and code != ''">
						AND
							code = #{code}
					</if>
					<if test="startPud != null and startPud != ''">
						AND
							pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
					</if>
					<if test="endPud != null and endPud != ''">
						AND
							pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
					</if>
					<if test="searchContent != null and searchContent != ''">
						<choose>
							<when test="searchTitle == 'name'">
								AND
									shipperName like CONCAT(CONCAT('%' , #{searchContent} ), '%')
							</when>
							<when test="searchTitle == 'ssn'">
								AND
									ssn like CONCAT(CONCAT('%' , #{searchContent} ), '%')
							</when>
							<when test="searchTitle == 'gblNo'">
								AND
									gblNo like CONCAT(CONCAT('%' , #{searchContent} ), '%')
							</when>
						</choose>				
					</if>
				ORDER BY
					g.seq desc
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}		
	</select>
	
	<select id="getGblStatusList" parameterType="InboundFilter" resultMap="StatusMap">
		SELECT
			gbl_no,
			gbl_input,
			gbl_weight,
			gbl_custom,
			gbl_onHandList,
			gbl_delivery,
			gbl_invoice
		FROM
			gbl_status
		WHERE
			gbl_no IN (
				SELECT
						gblNo
					FROM
						gbl_ib
					WHERE
						1 = 1
						<if test="branch != null and branch != ''">
							AND		
								area = #{branch}			
						</if>
						<if test="carrier != null and carrier != ''">
							AND
								tsp = #{carrier}
						</if>
						<if test="code != null and code != ''">
							AND
								code = #{code}
						</if>
						<if test="startPud != null and startPud != ''">
							AND
								pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
						</if>
						<if test="endPud != null and endPud != ''">
							AND
								pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
						</if>	
						<if test="searchContent != null and searchContent != ''">
							<choose>
								<when test="searchTitle == 'name'">
									AND
										shipperName like CONCAT(CONCAT('%' , #{searchContent} ), '%')
								</when>
								<when test="searchTitle == 'ssn'">
									AND
										ssn like CONCAT(CONCAT('%' , #{searchContent} ), '%')
								</when>
								<when test="searchTitle == 'gblNo'">
									AND
										gblNo like CONCAT(CONCAT('%' , #{searchContent} ), '%')
								</when>
							</choose>				
						</if>		
			)
	</select>
	
	<select id="getGbl" parameterType="Integer" resultType="GBL">
		SELECT
			g.seq,
			g.gblNo,
			g.shipperName,
			g.rank,
			g.code,
			g.tsp,
			g.destAddress,
			g.pud,
			g.rdd,
			g.arriveDate,
			g.awbNo,
			g.ssn,
			g.pmjDate,
			g.area AS areaLocal,
			g.fright,
			g.eMailAddress,
			g.oblNo,
			g.vessle,
			g.blCompany,
			g.remark,
			g.eta,
			g.sitIn,
			g.sitOut,
			g.sitNo,
			g.rate,
			g.yjNo,
			g.totalPcs,
			g.phone,
			g.address,
			g.onHandDate,
			g.gbloc,
			g.destinationGbloc,
			g.itemsPieces,
			g.grossWeight,
			g.netWeight,
			g.storedAt
		FROM
			gbl_ib g
		WHERE
			g.seq = #{seq}
	</select>	
	
	<delete id="deleteGbl" parameterType="Integer">
		DELETE FROM
			gbl_ib
		WHERE
			seq = #{value}
	</delete>
	
	<select id="getGblInfoByNo" parameterType="GBL" resultType="GBL">
		SELECT
			g.seq,
			g.gblNo,
			g.shipperName,
			g.rank,
			g.code,
			g.tsp,
			g.destAddress,
			g.pud,
			g.rdd,
			g.arriveDate,
			g.awbNo,
			g.ssn,
			g.pmjDate,
			g.area AS areaLocal,
			g.fright,
			g.eMailAddress,
			g.oblNo,
			g.vessle,
			g.blCompany,
			g.remark,
			g.eta,
			g.sitIn,
			g.sitOut,
			g.sitNo,
			g.rate,
			g.yjNo,
			g.totalPcs,
			g.phone,
			g.address,
			g.onHandDate,
			g.gbloc,
			g.destinationGbloc,
			g.itemsPieces,
			g.grossWeight,
			g.netWeight,
			g.storedAt
		FROM
			gbl_ib g
		WHERE
			g.gblNo = #{gblNo}		
	</select>
	
	<select id="getCarrierList" resultType="Code">
		SELECT DISTINCT
			tsp AS subCode
		FROM
			gbl_ib	
	</select>
	
	<select id="getCodeList" resultType="Code">
		SELECT DISTINCT
			code AS subCode
		FROM
			gbl_ib	
	</select>
	
	<select id="checkWeight" parameterType="Map" resultType="Integer">
		SELECT
			count(*)
		FROM
			weight_ib
		WHERE
			gblSeq = #{seq}			
	</select>
	
	<select id="getWeightList" parameterType="Integer" resultType="WeightIb">
		SELECT
			seq, piece, type, gross, grossKg, tare, net, cuft, reweight, remark, gblSeq
		FROM
			weight_ib
		WHERE
			gblSeq = #{value}
	</select>
	
	<select id="getWeight" parameterType="WeightIb" resultType="WeightIb">
		SELECT
			seq, piece, type, gross, grossKg, tare, net, cuft, reweight, remark, gblSeq
		FROM
			weight_ib
		WHERE
			gblSeq = #{gblSeq}
		AND
			piece = #{piece}		
	</select>
	
	<update id="updateWeight" parameterType="WeightIb" >
		UPDATE
			weight_ib
		SET
			piece = #{piece},
			type = #{type},
			gross = #{gross},
			grosskg = #{grossKg},
			tare = #{tare},
			net = #{net},
			cuft = #{cuft},
			reweight = #{reweight},
			remark = #{remark}
		WHERE
			gblSeq = #{gblSeq}
		AND
			piece = #{piece}
	</update>
	
	<select id="getInboundInvoiceListCount" parameterType="InboundFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			inbound_invoice_list
	</select>
	
	<select id="getInboundInvoiceList" parameterType="InboundFilter" resultType="InboundInvoice">
		SELECT 
			*
		FROM	
			(		
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					iil.seq, iil.gblNo, iil.name, iil.ssn, iil.inboundInvoiceNo, iil.gblSeq, iil.invoiceDate
				FROM
					inbound_invoice_list iil, (SELECT @rownum := 0) r
				ORDER BY
					iil.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}	
	</select>

	<select id="getCustomInvoiceGblListCount" parameterType="InboundFilter" resultType="Integer">		
		SELECT 
			count(*)
		FROM
			gbl_ib g
		WHERE
			gblNo IN (select gbl_no from gbl_status where gbl_weight = 1 )
		AND
			g.seq IN (
				SELECT
					gblSeq
				FROM
					weight_ib w
				WHERE
					w.seq NOT IN (SELECT weightSeq FROM inbound_invoice_weight WHERE gblSeq = g.seq)
			)
			<if test="area != null and area != ''">
				AND
					area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
			</if>
			<if test="branch != null and branch != ''">
				AND		
					area = #{branch}			
			</if>
			<if test="carrier != null and carrier != ''">
				AND
					tsp = #{carrier}
			</if>
			<if test="code != null and code != ''">
				AND
					code = #{code}
			</if>
			<if test="startPud != null and startPud != ''">
				AND
					pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
			</if>
			<if test="endPud != null and endPud != ''">
				AND
					pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
			</if>			
	</select>
	
	<select id="getCustomInvoiceGblList" parameterType="InboundFilter" resultType="GBL">
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					g.seq,
					g.gblNo,
					g.shipperName,
					g.rank,
					g.code,
					g.tsp,
					g.destAddress,
					g.pud,
					g.rdd,
					g.arriveDate,
					g.awbNo,
					g.ssn,
					g.pmjDate,
					g.area AS areaLocal,
					g.fright,
					g.eMailAddress,
					g.oblNo,
					g.vessle,
					g.blCompany,
					g.remark,
					g.eta,
					g.sitIn,
					g.sitOut,
					g.sitNo,
					g.rate,
					g.yjNo,
					g.totalPcs,
					g.phone,
					g.address,
					g.onHandDate,
					g.gbloc,
					g.destinationGbloc,
					g.itemsPieces,
					g.grossWeight,
					g.netWeight
				FROM
					gbl_ib g, (SELECT @rownum := 0) r
				WHERE
					gblNo IN (select gbl_no from gbl_status where gbl_weight = 1 )
				AND
					g.seq IN (
					SELECT
						gblSeq
					FROM
						weight_ib w
					WHERE
						w.seq NOT IN (SELECT weightSeq FROM inbound_invoice_weight WHERE gblSeq = g.seq)
					)
					<if test="area != null and area != ''">
						AND
							area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
					</if>
					<if test="branch != null and branch != ''">
						AND		
							area = #{branch}			
					</if>
					<if test="carrier != null and carrier != ''">
						AND
							tsp = #{carrier}
					</if>
					<if test="code != null and code != ''">
						AND
							code = #{code}
					</if>
					<if test="startPud != null and startPud != ''">
						AND
							pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
					</if>
					<if test="endPud != null and endPud != ''">
						AND
							pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
					</if>
				ORDER BY
					g.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}	
	</select>
	
	<select id="getLastInboundInvoiceNo" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			MAX(inboundInvoiceNo) + 1 AS inboundInvoiceNo, DATE_FORMAT(SYSDATE(), '%y') AS invoiceDate
		FROM
			inbound_invoice_list
		WHERE
			DATE_FORMAT(invoiceDate, '%y') = DATE_FORMAT(SYSDATE(), '%y')
	</select>
	
	<select id="getInboundInvoice" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			il.seq, g.gblNo, w.piece, w.cuft, w.grossWt, w.netWt, g.shipperName AS NAME, g.code,
			g.ssn, g.rank, il.inboundInvoiceNo, il.invoiceDate, g.eta, g.vessle, g.oblNo,
			g.fright, g.awbNo ,g.itemsPieces
		FROM
			inbound_invoice_list il, gbl_ib g,
			(
				SELECT 
					iiw.inboundInvoiceseq,
					COUNT(piece) AS piece,
					SUM(cuft) AS cuft,
					SUM(gross) AS grossWt,
					SUM(net) AS netWt  
				FROM
					weight_ib wi, inbound_invoice_weight iiw
				WHERE
					wi.seq = iiw.weightSeq
				GROUP BY
					iiw.inboundInvoiceSeq
			) w
		WHERE
			il.gblSeq = g.seq
		AND
			il.seq = w.inboundInvoiceSeq
		AND
			il.seq = #{value}
		AND
			il.seq IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight)
	</select>
	
	<select id="getAddInboundInvoice" parameterType="Integer" resultType="InboundInvoice">
		SELECT
			seq, gblNo, name, ssn, inboundInvoiceNo, gblSeq, invoiceDate
		FROM
			inbound_invoice_list
		WHERE
			seq = #{value}
	</select>
	
	<select id="checkInboundInvoiceWeight" parameterType="InboundInvoice" resultType="Integer">
		SELECT
			count(*)
		FROM
			inbound_invoice_weight
		WHERE
			inboundInvoiceSeq = #{seq}
	</select>
	
	<select id="getDeclarationListCount" parameterType="InboundFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			declaration_list d
	</select>
	
	<select id="getDeclarationList" parameterType="InboundFilter" resultType="InboundInvoice">
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					d.writeDate, dc.*
				FROM
					declaration_list d,
					(
						SELECT 
							dl.seq, il.invoiceDate
						FROM 
							declaration_list dl, declaration dc, inbound_invoice_list il
						WHERE
							dc.declarationListSeq = dl.seq
						AND
							dc.inboundInvoiceSeq = il.seq
					)dc,					
					(SELECT @rownum := 0) r		
				WHERE
					d.seq = dc.seq
				ORDER BY
					d.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}	
			
	</select>
	
	<select id="getDeclarationSeq" parameterType="String" resultType="Integer">
		SELECT
			DISTINCT declarationListSeq
		FROM
			declaration
		WHERE
			inboundInvoiceSeq = #{value}
	</select>
	
	<select id="getDeclarationSeqList" parameterType="Integer" resultType="Integer">
		SELECT
			d.declarationListSeq
		FROM
			declaration d, inbound_invoice_list il
		WHERE
			d.inboundInvoiceSeq = il.seq
		AND
			il.gblSeq = #{value}
	</select>

	<delete id="deleteDeclarationListBySeq" parameterType="Integer">
		DELETE FROM
			declaration_list
		WHERE
			seq = #{value}
	</delete>
	
	<select id="getInboundInvoiceDeclarationList" resultType="InboundInvoice">
		SELECT 
			il.seq, g.gblNo, g.shipperName AS name, g.ssn, g.rank, il.inboundInvoiceNo, il.invoiceDate, g.eta, il.declarationCheck
		FROM
			inbound_invoice_list il, gbl_ib g
		WHERE
			il.gblSeq = g.seq
		AND
			il.seq IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight)
		AND
			il.declarationCheck &lt;&gt; 1			
	</select>
	
	<select id="getGblProcess" parameterType="Integer" resultMap="StatusMap">
		SELECT			
			gbl_no,
			gbl_input,
			gbl_weight,
			gbl_custom,
			gbl_onHandList,
			gbl_delivery,
			gbl_invoice
		FROM
			gbl_status
		WHERE
			gbl_no = (select gblNo from gbl_ib where seq = #{value})
	</select>
	
	<select id="getGblFileList" parameterType="Integer" resultMap="GBLAttachmentMap">
		SELECT
			seq, gbl_no, file_name, file_path, file_extension, file_size, gbl_file_no, gbl_update_date
		FROM
			gbl_attachments
		WHERE
			gbl_no = (select gblNo from gbl_ib where seq = ${value})
	</select>

	<select id="getDd619List" parameterType="String" resultMap="Dd619Map">
		SELECT
			seq, gbl_no, date, name, ssn, rank, origin_of_shipment, destination, ordering_activity_name, carrier_name, agent_name, signature, carrier_shipment_reference, code, other, total, remark, officer_material, officer_signature, officer_date, rank_and_name, transportation_date, gbl_seq, write_date, write_user
		FROM
			dd619_ib
		WHERE
			gbl_seq = #{seq}
	</select>

	<select id="getDd619ListSelectOne" parameterType="Integer" resultMap="Dd619Map">
		SELECT
			seq, gbl_no, date, name, ssn, rank, origin_of_shipment, destination, ordering_activity_name, carrier_name, agent_name, signature, carrier_shipment_reference, code, other, total, remark, officer_material, officer_signature, officer_date, rank_and_name, transportation_date, gbl_seq, write_date, write_user, memorandum_list_seq
		FROM
			dd619_ib
		WHERE
			seq = #{value}
	</select>
	
	<select id="getRemarkValueList" parameterType="Map" resultType="Addition">
		SELECT
			seq, title, cost, price, gbl_seq AS gblSeq, dd619_seq AS dd619Seq, memorandum_list_seq AS memorandumListSeq
		FROM
			decide_ib
		WHERE
			gbl_seq = #{gblSeq}
		AND
			memorandum_list_seq = #{memorandumSeq}
	</select>	

	<select id="checkAddtionComplete" parameterType="Addition" resultType="Integer">
		SELECT
			count(*)
		FROM
			decide_ib
		WHERE
			gbl_seq = #{gblSeq}
		<if test="dd619Seq != null">
			AND
				dd619_seq = #{dd619Seq}
		</if>
		<if test="memorandumSeq != null">		
			AND
				memorandum_list_seq = #{memorandumSeq}
		</if>
		<if test="title != null">		
			AND
				title = #{title}
		</if>		
	</select>
	
	<select id="getInboundInvoiceListDeclaration" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			g.rank, il.name, il.gblNo, il.ssn, il.invoiceDate, g.oblNo, g.vessle 
		FROM 
			inbound_invoice_list il, declaration d, gbl_ib g
		WHERE
			il.seq = d.inboundInvoiceSeq
		AND
			d.declarationListSeq = #{value}
		AND
			il.gblSeq = g.seq
	</select>
		
	<insert id="insertFreight" parameterType="GBL">
	INSERT INTO
		gbl_ib
		(
			gblNo,
			shipperName,
			rank,
			code,
			tsp,
			destAddress,
			pud,
			rdd,
			arriveDate,
			awbNo,
			ssn,
			pmjDate,
			area,
			fright,
			eMailAddress,
			oblNo,
			vessle,
			blCompany,
			remark,
			eta,
			sitIn,
			sitOut,
			sitNo,
			rate,
			yjNo,
			totalPcs,
			phone,
			address,
			onHandDate,
			gbloc,
			destinationGbloc,
			itemsPieces,
			grossWeight,
			netWeight,
			storedAt
		)
	VALUES
		(
			#{gblNo},
			#{shipperName},
			#{rank},
			#{code},
			#{tsp},
			#{destAddress},
			#{pud},
			#{rdd},
			#{arriveDate},
			#{awbNo},
			#{ssn},
			#{pmjDate},
			#{areaLocal},
			#{fright},
			#{eMailAddress},
			#{oblNo},
			#{vessle},
			#{blCompany},
			#{remark},
			#{eta},
			#{sitIn},
			#{sitOut},
			#{sitNo},
			#{rate},
			#{yjNo},
			#{totalPcs},
			#{phone},			
			#{address},
			#{onHandDate},
			#{gbloc},
			#{destinationGbloc},
			#{itemsPieces},
			#{grossWeight},
			#{netWeight},
			#{storedAt}		
		)
	</insert>
	
	<update id="updateFreight" parameterType="GBL">
		UPDATE
			gbl_ib
		SET
			gblNo = #{gblNo},
			shipperName = #{shipperName},
			rank = #{rank},
			code = #{code},
			tsp = #{tsp},
			destAddress = #{destAddress},
			pud = #{pud},
			rdd = #{rdd},
			arriveDate = #{arriveDate},
			awbNo = #{awbNo},
			ssn = #{ssn},
			pmjDate = #{pmjDate},
			area = #{areaLocal},
			fright = #{fright},
			eMailAddress = #{eMailAddress},
			oblNo = #{oblNo},
			vessle = #{vessle},
			blCompany = #{blCompany},
			remark = #{remark},
			eta = #{eta},
			sitIn = #{sitIn},
			sitOut = #{sitOut},
			sitNo = #{sitNo},
			rate = #{rate},
			yjNo = #{yjNo},
			totalPcs = #{totalPcs},
			phone = #{phone},
			address = #{address},
			onHandDate = #{onHandDate},
			gbloc = #{gbloc},
			destinationGbloc = #{destinationGbloc},
			itemsPieces = #{itemsPieces},
			grossWeight = #{grossWeight},
			netWeight = #{netWeight},
			storedAt = #{storedAt}
		WHERE
			seq = #{seq}			
	</update>
	
	<insert id="insertFreightStatus" parameterType="GBL">
	INSERT INTO
		gbl_status
		(
			gbl_no, gbl_input, gbl_weight, gbl_custom, gbl_onHandList, gbl_delivery, gbl_invoice
		)
	VALUES
		(
			#{gblNo}, 1, 0, 0, 0, 0, 0
		)
	</insert>
	
	<insert id="insertWeightAdd" parameterType="WeightIb">
		INSERT INTO
			weight_ib
			(
				piece, type, gross, grossKg, tare, net, cuft, remark, gblSeq
			)
		VALUES
			(
				#{piece}, #{type}, #{gross}, #{grossKg}, #{tare}, #{net}, #{cuft}, #{remark}, #{gblSeq}
			)
	</insert>
	
	<insert id="inputCustomInboundInvoiceAddSetting" parameterType="InboundInvoice">
		INSERT INTO
			inbound_invoice_list
			(
				gblNo, name, ssn, inboundInvoiceNo, invoiceDate, gblSeq
			)
		VALUES
			(
				#{gblNo}, (select shipperName from gbl_ib where seq = #{gblSeq}), (select ssn from gbl_ib where seq = #{gblSeq}), #{inboundInvoiceNo}, #{invoiceDate}, #{gblSeq}
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<insert id="inserDeclarationList" parameterType="InboundInvoice">
		INSERT INTO
			declaration_list
			(writeDate)
		VALUES
			(DATE_FORMAT(SYSDATE(), '%Y%m%d'))		
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<insert id="insertDeclarationListContent" parameterType="Map">
		INSERT INTO
			declaration
			(
				declarationListSeq, inboundInvoiceSeq, writeDate
			)
		VALUES
			(
				#{declarationListSeq}, #{inboundInvoiceSeq}, DATE_FORMAT(SYSDATE(), '%Y%m%d')
			)
	</insert>

	<insert id="insertAttachment" parameterType="GBLAttachment">
		INSERT INTO
			gbl_attachments
			(
				gbl_no, file_name, file_path, file_extension, file_size, gbl_file_no, gbl_update_date
			)
		VALUES
			(
				#{gblNo}, #{fileName}, #{filePath}, #{fileExtension}, #{fileSize}, #{gblFileNo}, SYSDATE()
			)
	</insert>

	<insert id="insertDd619" parameterType="Dd619">
		INSERT INTO
			dd619_ib
			(
				gbl_seq, gbl_no, name, rank, ssn, code, carrier_shipment_reference, write_date, memorandum_list_seq
			)
		VALUES
		(
			#{gblSeq}, #{gblNo}, #{name}, #{rank}, #{ssn}, #{code}, #{carrierShipmentReference}, SYSDATE(), #{memorandumListSeq}
		)
	</insert>
	
	<insert id="inboundInvoiceWeightAdd" parameterType="Map">
		INSERT INTO
			inbound_invoice_weight
			(
				weightSeq, inboundInvoiceSeq, gblSeq
			)
		VALUES
		(
			#{weightSeq}, #{inboundInvoiceSeq}, (select gblSeq from inbound_invoice_list where seq = #{inboundInvoiceSeq})
		)
	</insert>

	<insert id="addtionComplete" parameterType="Addition">
		INSERT INTO
			decide_ib
			(
				title, cost, gbl_seq, dd619_seq, price, memorandum_list_seq
			)
		VALUES
			(
				#{title}, #{cost}, #{gblSeq}, #{dd619Seq}, #{price}, #{memorandumSeq}
			)
	</insert>

	<update id="updateDd619" parameterType="Dd619">
	    UPDATE
	    	dd619_ib
	    SET
	    	date = #{date},
	    	name = #{name},
	    	ssn = #{ssn},
	    	rank = #{rank},
	    	origin_of_shipment = #{originOfShipment},
	    	destination = #{destination},
	    	ordering_activity_name = #{orderingActivityName},
	    	carrier_name = #{carrierName},
	    	agent_name = #{agentName},
	    	signature = #{signature},
	    	carrier_shipment_reference = #{carrierShipmentReference},
	    	code = #{code},
	    	other = #{other},
	    	total = #{total},
	    	remark = #{remark},
	    	officer_material = #{officerMaterial},
	    	officer_signature = #{officerSignature},
	    	officer_date = #{officerDate},
	    	rank_and_name = #{rankAndName},
	    	transportation_date = #{transportationDate},
	    	update_date = SYSDATE(),
	    	update_user = #{writeUser}
	    WHERE
	    	seq = #{seq}
	</update>

	<update id="additionCompleteUpdate" parameterType="Addition">
		UPDATE
			decide_ib
		SET
			<if test="title != null">
				title = #{title},
			</if>
			<choose>
				<when test="cost != null">
					cost = #{cost}
				</when>
				<otherwise>
					price = #{price}
				</otherwise>
			</choose>
		WHERE
			gbl_seq = #{gblSeq}
		<if test="dd619Seq != null">
			AND
				dd619_seq = #{dd619Seq}
		</if>
		<if test="memorandumSeq != null">		
			AND
				memorandum_list_seq = #{memorandumSeq}
		</if>
		<if test="title != null">		
			AND
				title = #{title}
		</if>
	</update>
	
	<update id="updateGblStatus" parameterType="Map">
		UPDATE
			gbl_status
		SET
			gbl_no = gbl_no
			<if test="weight != null">
				, gbl_weight = #{weight}
			</if>
			<if test="custom != null">
				, gbl_custom = #{custom}
			</if>
			<if test="onHandList != null">
				, gbl_onHandList = #{onHandList}
			</if>
			<if test="delivery != null">
				, gbl_delivery = #{delivery}
			</if>
			<if test="invoice != null">
				, gbl_invoice = #{invoice}
			</if>
		WHERE
			1 = 1
			<if test="weight != null">
				AND
					gbl_no = (select gblNo from gbl_ib where seq = #{gblSeq})
			</if>
			<if test="custom != null">
				AND
					gbl_no = (select gblNo from inbound_invoice_list where seq = #{seq})
			</if>
			<if test="onHandList != null">
				AND
					gbl_no IN (select gblNo from gbl_ib where seq IN (select gblSeq from on_hand_list_content where onHandListSeq = #{seq}))
			</if>
			<if test="delivery != null">
				AND
					gbl_no = (select gblNo from gbl_ib where seq = #{seq})
			</if>
	</update>
	
	<delete id="deleteGblStatus" parameterType="Integer">
		DELETE FROM
			gbl_status
		WHERE
			gbl_no = (select gblNo from gbl_ib where seq = #{value})
	</delete>
	
	<update id="updateInboundInvoiceDeclaration" parameterType="Integer">
		UPDATE
			inbound_invoice_list
		SET
			declarationCheck = true
		WHERE
			seq = #{value}
	</update>
	
	<update id="updateInboundInvoiceDeclarationDelete" parameterType="Map">
		UPDATE
			inbound_invoice_list
		SET
			declarationCheck = false
		WHERE
			seq IN (select inboundInvoiceSeq from declaration where declarationListSeq = #{seq})
	</update>

	<delete id="deleteDd619" parameterType="Dd619">
		DELETE FROM
			dd619_ib
		WHERE
			gbl_seq = #{gblSeq}
		AND
			memorandum_list_seq = #{memorandumListSeq}
	</delete>
	
	<delete id="deleteInboundInvoice" parameterType="Map">
		DELETE FROM
			inbound_invoice_list
		WHERE
			seq = #{seq}
	</delete>
	
	<delete id="deleteDeclarationList" parameterType="Map">
		DELETE FROM
			declaration_list
		WHERE
			seq = #{seq}
	</delete>	
	
	<!-- On Hand List -->
	<select id="getOnHandListCount" resultType="Integer">
		SELECT
			count(*)
		FROM
			on_hand_list
	</select>
	
	<select id="getOnHandList" parameterType="InboundFilter" resultType="OnHandList">		
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					o.seq, o.onHandDate, o.firstArrivalableDeliverDate, o.writeDate
				
				FROM
					on_hand_list o, (SELECT @rownum := 0) r
		
				ORDER BY
					o.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}
	</select>
	
	<delete id="deleteEmptyOnHandList">
		DELETE	FROM 
			on_hand_list
		WHERE
			seq NOT IN (SELECT DISTINCT onHandListSeq FROM on_hand_list_content)				
	</delete>
	
	<select id="getOnHandListSeqList" parameterType="Integer" resultType="Integer">
		SELECT
			DISTINCT onHandListSeq
		FROM
			on_hand_list_content
		WHERE
			gblSeq = #{value}
	</select>
	
	<select id="checkSelectOnHandList" parameterType="Map" resultType="Integer">
		SELECT
			count(*)
		FROM
			on_hand_list_content
		WHERE
			onHandListSeq = #{seq}
		AND
			check_up = true
	</select>
	
	<select id="checkSelectOnHandListContentWeight" parameterType="Map" resultType="Integer">
		SELECT
			count(*)
		FROM
			on_hand_list_content_weight
		WHERE
			onHandListContentSeq = #{seq}
	</select>
	
	<insert id="insertOnHandList" parameterType="OnHandList">
		INSERT INTO
			on_hand_list
			(
				onHandDate, firstArrivalableDeliverDate, writeDate
			)
		VALUES
		(
			#{onHandDate}, #{firstArrivalableDeliverDate}, DATE_FORMAT(SYSDATE(), '%Y%m%d')
		)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<select id="getInboundInvoiceOnHandList" resultType="InboundInvoice">
		SELECT 
			il.seq, g.gblNo, g.shipperName AS NAME, g.ssn, g.rank, g.code, il.inboundInvoiceNo, il.invoiceDate, g.eta, il.declarationCheck, il.gblSeq
		FROM
			inbound_invoice_list il, gbl_ib g
		WHERE
			il.gblSeq = g.seq
		AND
			g.seq IN (SELECT gblSeq FROM weight_ib w WHERE w.seq NOT IN (SELECT weightSeq FROM on_hand_list_content_weight))
		AND
			il.seq NOT IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight iiw WHERE iiw.weightSeq IN (SELECT DISTINCT weightSeq FROM on_hand_list_content_weight))
		AND
			il.seq IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight)
		AND
			il.declarationCheck = 1	
	</select>
	
	<select id="getOnHandInvoiceListAlreadyInsert" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			o.seq AS onHandListContentSeq, g.gblNo, g.shipperName AS NAME, g.ssn, g.rank, g.code, g.eta, g.seq AS gblSeq
		FROM
			gbl_ib g, on_hand_list_content o
		WHERE
			o.gblSeq = g.seq
		AND
			g.seq IN (SELECT gblSeq FROM on_hand_list_content WHERE onHandListSeq = #{value})		
		AND
			g.seq IN (SELECT DISTINCT gblSeq FROM inbound_invoice_list WHERE check_up = 0 AND declarationCheck = 1)
	</select>
	
	<select id="getOnHandListForm" parameterType="Integer" resultMap="onHandListFormMap">
		<!-- 
		SELECT
			ohl.onHandDate, ohl.firstArrivalableDeliverDate, ohlc.seq AS onHandListContentSeq, ohlc.by, g.shipperName, g.rank, g.ssn, g.gblNo, g.code, g.pud, g.area, g.rdd, w.piece, w.gross, w.net, w.cuft
		FROM
			on_hand_list ohl, on_hand_list_content ohlc, gbl_ib g, 
			(
				SELECT
					COUNT(piece) AS piece, SUM(gross) AS gross, SUM(net) AS net, SUM(cuft) AS cuft
				FROM
					weight_ib
				WHERE
					seq IN (SELECT weightSeq FROM on_hand_list_content_weight WHERE onHandListContentSeq IN (SELECT seq FROM on_hand_list_content WHERE onHandListSeq = #{value}))
			)w
		WHERE
			ohl.seq = #{value}
		AND
			ohl.seq = ohlc.onHandListSeq
		AND
			g.seq = ohlc.gblSeq
		 -->
		SELECT
			ohl.onHandDate, ohl.firstArrivalableDeliverDate, ohlc.seq AS onHandListContentSeq, ohlc.by, g.shipperName, g.rank, g.ssn, g.gblNo, g.code, g.pud, b.branch as area, g.rdd, w.piece, w.gross, w.net, w.cuft
		FROM
			on_hand_list ohl, on_hand_list_content ohlc, gbl_ib g,branch b, 
			(
				SELECT
					COUNT(piece) AS piece, SUM(gross) AS gross, SUM(net) AS net, SUM(cuft) AS cuft
				FROM
					weight_ib
				WHERE
					seq IN (SELECT weightSeq FROM on_hand_list_content_weight WHERE onHandListContentSeq IN (SELECT seq FROM on_hand_list_content WHERE onHandListSeq = #{value}))
			)w
		WHERE
			ohl.seq = #{value}
		AND
			ohl.seq = ohlc.onHandListSeq
		AND
			g.seq = ohlc.gblSeq
		And b.branchAcronym = g.area			
	</select>
	
	<update id="onHandListContentByUpdate" parameterType="OnHandListContent">
		UPDATE
			on_hand_list_content o
		SET
			o.by = #{by}
		WHERE
			seq = #{seq}
	</update>
	
	<insert id="insertOnHandListContent" parameterType="OnHandListContent">
		INSERT INTO
			on_hand_list_content
			(
				gblSeq, onHandListSeq, check_up
			)
		VALUES
			(
				#{gblSeq}, #{onHandListSeq}, false
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<insert id="insertOnHandListContentWeight" parameterType="Map">
		INSERT INTO
			on_hand_list_content_weight
			(
				onHandListContentSeq, weightSeq
			)
		VALUES
			(
				#{onHandListContentSeq}, #{weightSeq}
			)
	</insert>
	
	<select id="getCheckWeightOnHandList" parameterType="Integer" resultType="Integer">
		SELECT
			weightSeq
		FROM
			on_hand_list_content_weight
		WHERE
			onHandListContentSeq = #{value}
	</select>
	
	<delete id="deleteOnHandListContentWeight" parameterType="Integer">
		DELETE FROM
			on_hand_list_content_weight
		WHERE
			onHandListContentSeq = #{value}
	</delete>
	
	<delete id="deleteOnHandListContent" parameterType="Integer">
		DELETE FROM
			on_hand_list_content
		WHERE
			seq = #{value}	
	</delete>
	
	<update id="updateOnHandListContent" parameterType="Map">
		UPDATE
			on_hand_list_content
		SET
			check_up = 1
		WHERE
			onHandListSeq = #{seq}
	</update>
	
	<delete id="deleteOnHandList" parameterType="Map">
		DELETE FROM
			on_hand_list
		WHERE
			seq = #{seq}
	</delete>
	
	<select id="getOnHandListOne" parameterType="Integer" resultType="OnHandList">
		SELECT
			seq, onHandDate
		FROM
			on_hand_list
		WHERE
			seq = #{value}
	</select>
	
	<update id="updateGblEtc" parameterType="GBL">
		UPDATE
			gbl_ib
		SET
			gblNo = gblNo
			<if test="onHandDate != null">
				,onHandDate = #{onHandDate}
			</if>
			<if test="grossWeight != null">
				, grossWeight = #{grossWeight}
				, netWeight = #{netWeight}
				, cuft = #{cuft}
				, totalPcs = #{totalPcs}
			</if>
		WHERE
			seq = #{seq}
	</update>
	
	<insert id="insertTruckManifast" parameterType="TruckManifastIb">
		INSERT INTO
			truck_manifast_ib
			(
				truckManifastDate, area
			)
		VALUES
			(
				#{truckManifastDate}, #{area}
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<select id="getTruckManifastSeqList" parameterType="Integer" resultType="Integer">
		SELECT
			DISTINCT truckSeq
		FROM 
			truck_manifast_ib_onhand
		WHERE
			onHandListContentSeq IN (SELECT DISTINCT seq FROM on_hand_list_content WHERE gblSeq = #{value})			
	</select>
	
	<insert id="insertTruckManifastOnHand" parameterType="TruckManifastIb">
		INSERT INTO
			truck_manifast_ib_onHand
			(
				truckSeq, onHandListContentSeq
			)			
		VALUES
			(
				#{seq}, #{onHandListContentSeq}
			)
	</insert>
	
	<select id="getOnHandGblList" parameterType="InboundFilter" resultType="GBL">
		SELECT 	
			g.seq, g.gblNo, g.shipperName, g.rank, g.code, g.tsp, g.destAddress, g.pud, g.rdd, g.arriveDate, g.awbNo,
			g.ssn, g.pmjDate, g.area AS areaLocal, g.fright, g.eMailAddress, g.oblNo, g.vessle, g.blCompany,
			g.remark, g.eta, g.sitIn, g.sitOut, g.sitNo, g.rate, g.yjNo, g.totalPcs, g.phone, g.address, g.onHandDate, g.gbloc,
			g.destinationGbloc, g.itemsPieces, g.grossWeight, g.netWeight, g.storedAt, ohlcw.pcs, ohlcw.lbs, ohlcw.cuft,
			ohlc.seq AS onHandContentSeq
		FROM
			gbl_ib g, on_hand_list_content ohlc,
			(
				SELECT
					COUNT(piece) AS pcs, SUM(gross) AS lbs, SUM(cuft) AS cuft, ohlcw.onHandListContentSeq
				FROM
					on_hand_list_content_weight ohlcw, weight_ib wi
				WHERE
					ohlcw.weightSeq = wi.seq
				GROUP BY 
					onHandListcontentSeq
			) ohlcw
		WHERE
			ohlc.seq NOT IN (SELECT onHandListContentSeq FROM truck_manifast_ib_onHand)
		AND
			g.seq = ohlc.gblSeq
		AND
			ohlcw.onHandListContentSeq = ohlc.seq	
	</select>
	
	<select id="getTruckManifastList" parameterType="InboundFilter" resultType="TruckManifastIb">
		SELECT
			seq, truckManifastDate, area
		FROM
			truck_manifast_ib
	</select>
	
	<delete id="deleteTruckManifast" parameterType="Map">
		DELETE FROM
			truck_manifast_ib
		WHERE
			seq = #{truckSeq}
	</delete>
	
	<delete id="deleteTruckManifastEmptyTruck">
		DELETE	FROM 
			truck_manifast_ib
		WHERE
			seq NOT IN (SELECT DISTINCT truckSeq FROM truck_manifast_ib_onhand)			
	</delete>
	
	<select id="getTruckManifastOnHandContentListSeqList" parameterType="Integer" resultType="Integer">
		SELECT
			onHandListContentSeq
		FROM
			truck_manifast_ib_onhand
		WHERE
			truckSeq = #{value}
	</select>
	
	<select id="getOnHandListContent" parameterType="Integer" resultType="GBL">
		SELECT 	
			g.seq, g.gblNo, g.shipperName, g.rank, g.code, g.tsp, g.destAddress, g.pud, g.rdd, g.arriveDate, g.awbNo,
			g.ssn, g.pmjDate, g.area AS areaLocal, g.fright, g.eMailAddress, g.oblNo, g.vessle, g.blCompany,
			g.remark, g.eta, g.sitIn, g.sitOut, g.sitNo, g.rate, g.yjNo, g.totalPcs, g.phone, g.address, g.onHandDate, g.gbloc,
			g.destinationGbloc, g.itemsPieces, g.grossWeight, g.netWeight, g.storedAt, ohlcw.pcs, ohlcw.lbs, ohlcw.cuft,
			ohlc.seq AS onHandContentSeq
		FROM
			gbl_ib g, on_hand_list_content ohlc,
			(
				SELECT
					COUNT(piece) AS pcs, SUM(gross) AS lbs, SUM(cuft) AS cuft, ohlcw.onHandListContentSeq
				FROM
					on_hand_list_content_weight ohlcw, weight_ib wi
				WHERE
					ohlcw.weightSeq = wi.seq
				GROUP BY 
					onHandListcontentSeq
			) ohlcw
		WHERE
			ohlc.seq = #{value}
		AND
			g.seq = ohlc.gblSeq
		AND
			ohlcw.onHandListContentSeq = ohlc.seq	
	</select>
	
	<select id="getTruckBasicInfo" parameterType="Integer" resultType="TruckManifastIb">
		SELECT
			seq, truckManifastDate, area
		FROM
			truck_manifast_ib
		WHERE
			seq = #{value}
	</select>
	 
	<!-- comfirm -->
		
	<select id="getAdditionList" parameterType="Integer" resultType="Addition">
		SELECT
			seq, title, cost, price, gbl_seq AS gblSeq
		FROM
			decide_ib
		WHERE
			gbl_seq = #{value}
	</select>
	
	<!-- reweight  -->
	<select id="getReweightList" parameterType="InboundFilter" resultType="Reweight">
		SELECT
			seq, reweightDate, reweightName
		FROM
			reweight
	</select>
	
	<select id="getReweight" parameterType="Integer" resultType="Reweight">
		SELECT
			seq, reweightDate, reweightName
		FROM
			reweight
		WHERE
			seq = #{value}
	</select>
	
	<select id="getReweightContentList" parameterType="Integer" resultType="ReweightContent">
		SELECT
			seq, reweightSeq, gblSeq
		FROM
			reweight_content
		WHERE
			reweightSeq = #{value}
	</select>
	
	<select id="getReweightSeqList" parameterType="Integer" resultType="Integer">
		SELECT
			DISTINCT reweightSeq
		FROM
			reweight_content
		WHERE
			gblSeq = #{value}
	</select>
	
	<resultMap type="GBL" id="GBLMap">
		<result column="pud" property="pud"/>
		<result column="code" property="code"/>
		<result column="area" property="areaLocal"/>
		<result column="gbloc" property="gbloc"/>
		<result column="tsp" property="tsp"/>
		<result column="gblNo" property="gblNo"/>
		<result column="shipperName" property="shipperName"/>
		<result column="gross" property="weightIb.gross"/>
		<result column="reweight" property="weightIb.reweight" />
		<result column="seq" property="seq" />
	</resultMap>
	
	<select id="getReweightGblList" resultMap="GBLMap">
		SELECT 
			g.pud, g.code, g.area, g.gbloc, g.tsp, g.gblNo, g.shipperName, SUM(w.gross) AS gross, reweight, g.seq
		FROM
			gbl_ib g, weight_ib w
		WHERE
			g.reweightCheck = 0
		AND
			g.seq = w.gblSeq
		AND 
			LENGTH(w.reweight) != 0
		GROUP BY
			w.gblSeq
	</select>
	
	<insert id="insertReweight" parameterType="Reweight">
		INSERT INTO
			reweight
			(
				reweightDate, reweightName
			)
		VALUES
			(
				DATE_FORMAT(SYSDATE(), '%Y%m%d'), #{reweightName}
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<insert id="insertReweightContent" parameterType="ReweightContent">
		INSERT INTO
			reweight_content
			(
				reweightSeq, gblSeq
			)
		VALUES
			(
				#{reweightSeq}, #{gblSeq}
			)
	</insert>
	
	<delete id="deleteReweight" parameterType="Reweight">
		DELETE FROM
			reweight
		WHERE
			seq = #{seq}
	</delete>
	
	<update id="updateReweightCheck" parameterType="Map">
		UPDATE
			gbl_ib
		SET
			reweightCheck = #{check}
		WHERE
			<choose>
				<when test="seq != null">
					seq = #{seq}
				</when>
				<when test="reweightSeq != null">
					seq in (select gblSeq from reweight_Content where reweightSeq = #{reweightSeq})
				</when>
			</choose>
	</update>
</mapper>

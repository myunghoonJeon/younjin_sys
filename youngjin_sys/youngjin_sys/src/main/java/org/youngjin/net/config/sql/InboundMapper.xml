<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="inboundMapper">	
	<resultMap type="GBLStatus" id="StatusMap">
		<result column="gbl_no" property="no"/>
		<result column="gbl_input" property="input" />
		<result column="gbl_weight" property="weight" />
		<result column="gbl_custom" property="custom" />
		<result column="gbl_onHandList" property="onHandList" />
		<result column="gbl_delivery" property="delivery" />
		<result column="gbl_invoice" property="invoice" />
	</resultMap>

	<resultMap type="GBLAttachment" id="GBLAttachmentMap">
		<result column="seq" property="seq"/>
		<result column="gbl_no" property="gblNo"/>
		<result column="file_name" property="fileName"/>
		<result column="file_path" property="filePath"/>
		<result column="file_extension" property="fileExtension"/>
		<result column="file_size" property="fileSize"/>
		<result column="gbl_file_no" property="gblFileNo"/>
		<result column="gbl_update_date" property="gblUpdateDate"/>
	</resultMap>

	<resultMap type="Dd619" id="Dd619Map">
		<result column="seq" property="seq"/>
		<result column="gbl_no" property="gblNo"/>
		<result column="date" property="date"/>
		<result column="name" property="name"/>
		<result column="ssn" property="ssn"/>
		<result column="rank" property="rank"/>
		<result column="origin_of_shipment" property="originOfShipment"/>
		<result column="destination" property="destination"/>
		<result column="ordering_activity_name" property="orderingActivityName"/>
		<result column="carrier_name" property="carrierName"/>
		<result column="agent_name" property="agentName"/>
		<result column="signature" property="signature"/>
		<result column="carrier_shipment_reference" property="carrierShipmentReference"/>
		<result column="code" property="code"/>
		<result column="other" property="other"/>
		<result column="total" property="total"/>
		<result column="remark" property="remark"/>
		<result column="officer_material" property="officerMaterial"/>
		<result column="officer_signature" property="officerSignature"/>
		<result column="officer_date" property="officerDate"/>
		<result column="rank_and_name" property="rankAndName"/>
		<result column="transportation_date" property="transportationDate"/>
		<result column="gbl_seq" property="gblSeq"/>
		<result column="write_date" property="writeDate"/>
		<result column="write_user" property="writeUser"/>
		<result column="memorandum_list_seq" property="memorandumListSeq"/>
	</resultMap>

	<select id="getFreightListCount" parameterType="InboundFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			gbl_ib
		WHERE
			1 = 1
			<if test="area != null and area != ''">
				AND
					area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
			</if>
			<if test="branch != null and branch != ''">
				AND		
					area = #{branch}			
			</if>
			<if test="carrier != null and carrier != ''">
				AND
					tsp = #{carrier}
			</if>
			<if test="code != null and code != ''">
				AND
					code = #{code}
			</if>
			<if test="startPud != null and startPud != ''">
				AND
					pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
			</if>
			<if test="endPud != null and endPud != ''">
				AND
					pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
			</if>
	</select>
	
	<select id="getFreightList" parameterType="InboundFilter" resultType="GBL">
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					g.seq,
					g.gblNo,
					g.shipperName,
					g.rank,
					g.code,
					g.tsp,
					g.destAddress,
					g.pud,
					g.rdd,
					g.arriveDate,
					g.awbNo,
					g.ssn,
					g.pmjDate,
					g.area AS areaLocal,
					g.fright,
					g.eMailAddress,
					g.oblNo,
					g.vessle,
					g.blCompany,
					g.remark,
					g.eta,
					g.sitIn,
					g.sitOut,
					g.sitNo,
					g.rate,
					g.yjNo,
					g.totalPcs,
					g.phone,
					g.address,
					g.onHandDate,
					g.gbloc,
					g.destinationGbloc,
					g.itemsPieces,
					g.grossWeight,
					g.netWeight
				FROM
					gbl_ib g, (SELECT @rownum := 0) r
				WHERE
					1 = 1
					<if test="area != null and area != ''">
						AND
							area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
					</if>
					<if test="branch != null and branch != ''">
						AND		
							area = #{branch}			
					</if>
					<if test="carrier != null and carrier != ''">
						AND
							tsp = #{carrier}
					</if>
					<if test="code != null and code != ''">
						AND
							code = #{code}
					</if>
					<if test="startPud != null and startPud != ''">
						AND
							pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
					</if>
					<if test="endPud != null and endPud != ''">
						AND
							pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
					</if>
				ORDER BY
					g.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}		
	</select>
	
	<select id="getGblStatusList" parameterType="InboundFilter" resultMap="StatusMap">
		SELECT
			gbl_no,
			gbl_input,
			gbl_weight,
			gbl_custom,
			gbl_onHandList,
			gbl_delivery,
			gbl_invoice
		FROM
			gbl_status
		WHERE
			gbl_no IN (
				SELECT
						gblNo
					FROM
						gbl_ib
					WHERE
						1 = 1
						<if test="branch != null and branch != ''">
							AND		
								area = #{branch}			
						</if>
						<if test="carrier != null and carrier != ''">
							AND
								tsp = #{carrier}
						</if>
						<if test="code != null and code != ''">
							AND
								code = #{code}
						</if>
						<if test="startPud != null and startPud != ''">
							AND
								pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
						</if>
						<if test="endPud != null and endPud != ''">
							AND
								pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
						</if>			
			)
	</select>
	
	<select id="getGbl" parameterType="Integer" resultType="GBL">
		SELECT
			g.seq,
			g.gblNo,
			g.shipperName,
			g.rank,
			g.code,
			g.tsp,
			g.destAddress,
			g.pud,
			g.rdd,
			g.arriveDate,
			g.awbNo,
			g.ssn,
			g.pmjDate,
			g.area AS areaLocal,
			g.fright,
			g.eMailAddress,
			g.oblNo,
			g.vessle,
			g.blCompany,
			g.remark,
			g.eta,
			g.sitIn,
			g.sitOut,
			g.sitNo,
			g.rate,
			g.yjNo,
			g.totalPcs,
			g.phone,
			g.address,
			g.onHandDate,
			g.gbloc,
			g.destinationGbloc,
			g.itemsPieces,
			g.grossWeight,
			g.netWeight
		FROM
			gbl_ib g
		WHERE
			g.seq = #{seq}
	</select>	
	
	<select id="getCarrierList" resultType="Code">
		SELECT DISTINCT
			tsp AS subCode
		FROM
			gbl_ib	
	</select>
	
	<select id="getCodeList" resultType="Code">
		SELECT DISTINCT
			code AS subCode
		FROM
			gbl_ib	
	</select>
	
	<select id="checkWeight" parameterType="Map" resultType="Integer">
		SELECT
			count(*)
		FROM
			weight_ib
		WHERE
			gblSeq = #{seq}			
	</select>
	
	<select id="getWeightList" parameterType="Integer" resultType="WeightIb">
		SELECT
			seq, piece, type, gross, grossKg, tare, net, cuft, reweight, remark, gblSeq
		FROM
			weight_ib
		WHERE
			gblSeq = #{value}
	</select>
	
	<select id="getInboundInvoiceListCount" parameterType="InboundFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			inbound_invoice_list
	</select>
	
	<select id="getInboundInvoiceList" parameterType="InboundFilter" resultType="InboundInvoice">
		SELECT 
			*
		FROM	
			(		
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					iil.seq, iil.gblNo, iil.name, iil.ssn, iil.inboundInvoiceNo, iil.gblSeq, iil.invoiceDate
				FROM
					inbound_invoice_list iil, (SELECT @rownum := 0) r
				ORDER BY
					iil.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}	
	</select>

	<select id="getCustomInvoiceGblListCount" parameterType="InboundFilter" resultType="Integer">		
		SELECT 
			count(*)
		FROM
			gbl_ib g
		WHERE
			gblNo IN (select gbl_no from gbl_status where gbl_weight = 1 and gbl_custom = 0 )
		AND
			g.seq IN (
				SELECT
					gblSeq
				FROM
					weight_ib w
				WHERE
					w.seq NOT IN (SELECT weightSeq FROM inbound_invoice_weight WHERE gblSeq = g.seq)
			)
			<if test="area != null and area != ''">
				AND
					area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
			</if>
			<if test="branch != null and branch != ''">
				AND		
					area = #{branch}			
			</if>
			<if test="carrier != null and carrier != ''">
				AND
					tsp = #{carrier}
			</if>
			<if test="code != null and code != ''">
				AND
					code = #{code}
			</if>
			<if test="startPud != null and startPud != ''">
				AND
					pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
			</if>
			<if test="endPud != null and endPud != ''">
				AND
					pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
			</if>			
	</select>
	
	<select id="getCustomInvoiceGblList" parameterType="InboundFilter" resultType="GBL">
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					g.seq,
					g.gblNo,
					g.shipperName,
					g.rank,
					g.code,
					g.tsp,
					g.destAddress,
					g.pud,
					g.rdd,
					g.arriveDate,
					g.awbNo,
					g.ssn,
					g.pmjDate,
					g.area AS areaLocal,
					g.fright,
					g.eMailAddress,
					g.oblNo,
					g.vessle,
					g.blCompany,
					g.remark,
					g.eta,
					g.sitIn,
					g.sitOut,
					g.sitNo,
					g.rate,
					g.yjNo,
					g.totalPcs,
					g.phone,
					g.address,
					g.onHandDate,
					g.gbloc,
					g.destinationGbloc,
					g.itemsPieces,
					g.grossWeight,
					g.netWeight
				FROM
					gbl_ib g, (SELECT @rownum := 0) r
				WHERE
					gblNo IN (select gbl_no from gbl_status where gbl_weight = 1 and gbl_custom = 0 )
				AND
					g.seq IN (
					SELECT
						gblSeq
					FROM
						weight_ib w
					WHERE
						w.seq NOT IN (SELECT weightSeq FROM inbound_invoice_weight WHERE gblSeq = g.seq)
					)
					<if test="area != null and area != ''">
						AND
							area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
					</if>
					<if test="branch != null and branch != ''">
						AND		
							area = #{branch}			
					</if>
					<if test="carrier != null and carrier != ''">
						AND
							tsp = #{carrier}
					</if>
					<if test="code != null and code != ''">
						AND
							code = #{code}
					</if>
					<if test="startPud != null and startPud != ''">
						AND
							pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
					</if>
					<if test="endPud != null and endPud != ''">
						AND
							pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
					</if>
				ORDER BY
					g.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}	
	</select>
	
	<select id="getLastInboundInvoiceNo" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			MAX(inboundInvoiceNo) + 1 AS inboundInvoiceNo, DATE_FORMAT(SYSDATE(), '%y') AS invoiceDate
		FROM
			inbound_invoice_list
		WHERE
			DATE_FORMAT(invoiceDate, '%y') = DATE_FORMAT(SYSDATE(), '%y')
	</select>
	
	<select id="getInboundInvoice" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			il.seq, g.gblNo, w.piece, w.cuft, w.grossWt, w.netWt, g.shipperName AS NAME, g.code,
			g.ssn, g.rank, il.inboundInvoiceNo, il.invoiceDate, g.eta, g.vessle, g.oblNo,
			g.fright, g.awbNo ,g.itemsPieces
		FROM
			inbound_invoice_list il, gbl_ib g,
			(
				SELECT 
					iiw.inboundInvoiceseq,
					COUNT(piece) AS piece,
					SUM(cuft) AS cuft,
					SUM(gross) AS grossWt,
					SUM(net) AS netWt  
				FROM
					weight_ib wi, inbound_invoice_weight iiw
				WHERE
					wi.seq = iiw.weightSeq
				GROUP BY
					iiw.inboundInvoiceSeq
			) w
		WHERE
			il.gblSeq = g.seq
		AND
			il.seq = w.inboundInvoiceSeq
		AND
			il.seq = #{value}
		AND
			il.seq IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight)
	</select>
	
	<select id="checkInboundInvoiceWeight" parameterType="InboundInvoice" resultType="Integer">
		SELECT
			count(*)
		FROM
			inbound_invoice_weight
		WHERE
			inboundInvoiceSeq = #{seq}
	</select>
	
	<select id="getDeclarationListCount" parameterType="InboundFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			declaration_list d
	</select>
	
	<select id="getDeclarationList" parameterType="InboundFilter" resultType="InboundInvoice">
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					d.seq, d.writeDate
				FROM
					declaration_list d, (SELECT @rownum := 0) r
		
				ORDER BY
					d.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}	
			
	</select>
	
	<select id="getInboundInvoiceDeclarationList" resultType="InboundInvoice">
		SELECT 
			il.seq, g.gblNo, g.shipperName AS name, g.ssn, g.rank, il.inboundInvoiceNo, il.invoiceDate, g.eta, il.declarationCheck
		FROM
			inbound_invoice_list il, gbl_ib g
		WHERE
			il.gblSeq = g.seq
		AND
			il.seq IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight)
		AND
			il.declarationCheck &lt;&gt; 1			
	</select>
	
	<select id="getGblProcess" parameterType="Integer" resultMap="StatusMap">
		SELECT			
			gbl_no,
			gbl_input,
			gbl_weight,
			gbl_custom,
			gbl_onHandList,
			gbl_delivery,
			gbl_invoice
		FROM
			gbl_status
		WHERE
			gbl_no = (select gblNo from gbl_ib where seq = #{value})
	</select>
	
	<select id="getGblFileList" parameterType="Integer" resultMap="GBLAttachmentMap">
		SELECT
			seq, gbl_no, file_name, file_path, file_extension, file_size, gbl_file_no, gbl_update_date
		FROM
			gbl_attachments
		WHERE
			gbl_no = (select gblNo from gbl_ib where seq = ${value})
	</select>

	<select id="getDd619List" parameterType="String" resultMap="Dd619Map">
		SELECT
			seq, gbl_no, date, name, ssn, rank, origin_of_shipment, destination, ordering_activity_name, carrier_name, agent_name, signature, carrier_shipment_reference, code, other, total, remark, officer_material, officer_signature, officer_date, rank_and_name, transportation_date, gbl_seq, write_date, write_user
		FROM
			dd619_ib
		WHERE
			gbl_seq = #{seq}
	</select>

	<select id="getDd619ListSelectOne" parameterType="Integer" resultMap="Dd619Map">
		SELECT
			seq, gbl_no, date, name, ssn, rank, origin_of_shipment, destination, ordering_activity_name, carrier_name, agent_name, signature, carrier_shipment_reference, code, other, total, remark, officer_material, officer_signature, officer_date, rank_and_name, transportation_date, gbl_seq, write_date, write_user, memorandum_list_seq
		FROM
			dd619_ib
		WHERE
			seq = #{value}
	</select>
	
	<select id="getRemarkValueList" parameterType="Map" resultType="Addition">
		SELECT
			seq, title, cost, price, gbl_seq AS gblSeq, dd619_seq AS dd619Seq, memorandum_list_seq AS memorandumListSeq
		FROM
			decide_ib
		WHERE
			gbl_seq = #{gblSeq}
		AND
			memorandum_list_seq = #{memorandumSeq}
	</select>	

	<select id="checkAddtionComplete" parameterType="Addition" resultType="Integer">
		SELECT
			count(*)
		FROM
			decide_ib
		WHERE
			gbl_seq = #{gblSeq}
		<if test="dd619Seq != null">
			AND
				dd619_seq = #{dd619Seq}
		</if>
		<if test="memorandumSeq != null">		
			AND
				memorandum_list_seq = #{memorandumSeq}
		</if>
		<if test="title != null">		
			AND
				title = #{title}
		</if>		
	</select>
	
	<select id="getInboundInvoiceListDeclaration" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			g.rank, il.name, il.gblNo, il.ssn, g.oblNo, g.vessle FROM inbound_invoice_list il, declaration d, gbl_ib g
		WHERE
			il.seq = d.inboundInvoiceSeq
		AND
			d.declarationListSeq = #{value}
		AND
			il.gblSeq = g.seq
	</select>
		
	<insert id="insertFreight" parameterType="GBL">
	INSERT INTO
		gbl_ib
		(
			gblNo,
			shipperName,
			rank,
			code,
			tsp,
			destAddress,
			pud,
			rdd,
			arriveDate,
			awbNo,
			ssn,
			pmjDate,
			area,
			fright,
			eMailAddress,
			oblNo,
			vessle,
			blCompany,
			remark,
			eta,
			sitIn,
			sitOut,
			sitNo,
			rate,
			yjNo,
			totalPcs,
			phone,
			address,
			onHandDate,
			gbloc,
			destinationGbloc,
			itemsPieces,
			grossWeight,
			netWeight
		)
	VALUES
		(
			#{gblNo},
			#{shipperName},
			#{rank},
			#{code},
			#{tsp},
			#{destAddress},
			#{pud},
			#{rdd},
			#{arriveDate},
			#{awbNo},
			#{ssn},
			#{pmjDate},
			#{areaLocal},
			#{fright},
			#{eMailAddress},
			#{oblNo},
			#{vessle},
			#{blCompany},
			#{remark},
			#{eta},
			#{sitIn},
			#{sitOut},
			#{sitNo},
			#{rate},
			#{yjNo},
			#{totalPcs},
			#{phone},			
			#{address},
			#{onHandDate},
			#{gbloc},
			#{destinationGbloc},
			#{itemsPieces},
			#{grossWeight},
			#{netWeight}		
		)
	</insert>
	
	<insert id="insertFreightStatus" parameterType="GBL">
	INSERT INTO
		gbl_status
		(
			gbl_no, gbl_input, gbl_weight, gbl_custom, gbl_onHandList, gbl_delivery, gbl_invoice
		)
	VALUES
		(
			#{gblNo}, 1, 0, 0, 0, 0, 0
		)
	</insert>
	
	<insert id="insertWeightAdd" parameterType="WeightIb">
		INSERT INTO
			weight_ib
			(
				piece, type, gross, grossKg, tare, net, cuft, remark, gblSeq
			)
		VALUES
			(
				#{piece}, #{type}, #{gross}, #{grossKg}, #{tare}, #{net}, #{cuft}, #{remark}, #{gblSeq}
			)
	</insert>
	
	<insert id="inputCustomInboundInvoiceAddSetting" parameterType="InboundInvoice">
		INSERT INTO
			inbound_invoice_list
			(
				gblNo, name, ssn, inboundInvoiceNo, invoiceDate, gblSeq
			)
		VALUES
			(
				#{gblNo}, (select shipperName from gbl_ib where seq = #{gblSeq}), (select ssn from gbl_ib where seq = #{gblSeq}), #{inboundInvoiceNo}, #{invoiceDate}, #{gblSeq}
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<insert id="inserDeclarationList" parameterType="InboundInvoice">
		INSERT INTO
			declaration_list
			(writeDate)
		VALUES
			(DATE_FORMAT(SYSDATE(), '%Y%m%d'))		
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<insert id="insertDeclarationListContent" parameterType="Map">
		INSERT INTO
			declaration
			(
				declarationListSeq, inboundInvoiceSeq, writeDate
			)
		VALUES
			(
				#{declarationListSeq}, #{inboundInvoiceSeq}, DATE_FORMAT(SYSDATE(), '%Y%m%d')
			)
	</insert>

	<insert id="insertAttachment" parameterType="GBLAttachment">
		INSERT INTO
			gbl_attachments
			(
				gbl_no, file_name, file_path, file_extension, file_size, gbl_file_no, gbl_update_date
			)
		VALUES
			(
				#{gblNo}, #{fileName}, #{filePath}, #{fileExtension}, #{fileSize}, #{gblFileNo}, SYSDATE()
			)
	</insert>

	<insert id="insertDd619" parameterType="Dd619">
		INSERT INTO
			dd619_ib
			(
				gbl_seq, gbl_no, name, rank, ssn, code, carrier_shipment_reference, write_date, memorandum_list_seq
			)
		VALUES
		(
			#{gblSeq}, #{gblNo}, #{name}, #{rank}, #{ssn}, #{code}, #{carrierShipmentReference}, SYSDATE(), #{memorandumListSeq}
		)
	</insert>
	
	<insert id="inboundInvoiceWeightAdd" parameterType="Map">
		INSERT INTO
			inbound_invoice_weight
			(
				weightSeq, inboundInvoiceSeq, gblSeq
			)
		VALUES
		(
			#{weightSeq}, #{inboundInvoiceSeq}, (select gblSeq from inbound_invoice_list where seq = #{inboundInvoiceSeq})
		)
	</insert>

	<insert id="addtionComplete" parameterType="Addition">
		INSERT INTO
			decide_ib
			(
				title, cost, gbl_seq, dd619_seq, price, memorandum_list_seq
			)
		VALUES
			(
				#{title}, #{cost}, #{gblSeq}, #{dd619Seq}, #{price}, #{memorandumSeq}
			)
	</insert>

	<update id="updateDd619" parameterType="Dd619">
	    UPDATE
	    	dd619_ib
	    SET
	    	date = #{date},
	    	name = #{name},
	    	ssn = #{ssn},
	    	rank = #{rank},
	    	origin_of_shipment = #{originOfShipment},
	    	destination = #{destination},
	    	ordering_activity_name = #{orderingActivityName},
	    	carrier_name = #{carrierName},
	    	agent_name = #{agentName},
	    	signature = #{signature},
	    	carrier_shipment_reference = #{carrierShipmentReference},
	    	code = #{code},
	    	other = #{other},
	    	total = #{total},
	    	remark = #{remark},
	    	officer_material = #{officerMaterial},
	    	officer_signature = #{officerSignature},
	    	officer_date = #{officerDate},
	    	rank_and_name = #{rankAndName},
	    	transportation_date = #{transportationDate},
	    	update_date = SYSDATE(),
	    	update_user = #{writeUser}
	    WHERE
	    	seq = #{seq}
	</update>

	<update id="additionCompleteUpdate" parameterType="Addition">
		UPDATE
			decide_ib
		SET
			<if test="title != null">
				title = #{title},
			</if>
			<choose>
				<when test="cost != null">
					cost = #{cost}
				</when>
				<otherwise>
					price = #{price}
				</otherwise>
			</choose>
		WHERE
			gbl_seq = #{gblSeq}
		<if test="dd619Seq != null">
			AND
				dd619_seq = #{dd619Seq}
		</if>
		<if test="memorandumSeq != null">		
			AND
				memorandum_list_seq = #{memorandumSeq}
		</if>
		<if test="title != null">		
			AND
				title = #{title}
		</if>
	</update>
	
	<update id="updateGblStatus" parameterType="Map">
		UPDATE
			gbl_status
		SET
			gbl_no = gbl_no
			<if test="weight != null">
				, gbl_weight = #{weight}
			</if>
			<if test="custom != null">
				, gbl_custom = #{custom}
			</if>
			<if test="onHandList != null">
				, gbl_onHandList = #{onHandList}
			</if>
			<if test="delivery != null">
				, gbl_delivery = #{delivery}
			</if>
		WHERE
			1 = 1
			<if test="weight != null">
				AND
					gbl_no = (select gblNo from gbl_ib where seq = #{gblSeq})
			</if>
			<if test="custom != null">
				AND
					gbl_no = (select gblNo from inbound_invoice_list where seq = #{seq})
			</if>
			<if test="onHandList != null">
				AND
					gbl_no IN (select gblNo from gbl_ib where seq = (select gblSeq from on_hand_list_content where onHandListSeq = #{seq}))
			</if>
			<if test="delivery != null">
				AND
					gbl_no = (select gblNo from gbl_ib where seq = #{seq})
			</if>
	</update>
	
	<update id="updateInboundInvoiceDeclaration" parameterType="Integer">
		UPDATE
			inbound_invoice_list
		SET
			declarationCheck = true
		WHERE
			seq = #{value}
	</update>
	
	<update id="updateInboundInvoiceDeclarationDelete" parameterType="Map">
		UPDATE
			inbound_invoice_list
		SET
			declarationCheck = false
		WHERE
			seq IN (select inboundInvoiceSeq from declaration where declarationListSeq = #{seq})
	</update>

	<delete id="deleteDd619" parameterType="Dd619">
		DELETE FROM
			dd619_ib
		WHERE
			gbl_seq = #{gblSeq}
		AND
			memorandum_list_seq = #{memorandumListSeq}
	</delete>
	
	<delete id="deleteInboundInvoice" parameterType="Map">
		DELETE FROM
			inbound_invoice_list
		WHERE
			seq = #{seq}
	</delete>
	
	<delete id="deleteDeclarationList" parameterType="Map">
		DELETE FROM
			declaration_list
		WHERE
			seq = #{seq}
	</delete>	
	
	<!-- On Hand List -->
	<select id="getOnHandListCount" resultType="Integer">
		SELECT
			count(*)
		FROM
			on_hand_list
	</select>
	
	<select id="getOnHandList" parameterType="InboundFilter" resultType="OnHandList">		
		SELECT 
			*
		FROM	
			(
				SELECT
					(@rownum := @rownum + 1) AS rownum,
					o.seq, o.onHandDate, o.firstArrivalableDeliverDate, o.writeDate
				
				FROM
					on_hand_list o, (SELECT @rownum := 0) r
		
				ORDER BY
					o.seq
			)u	
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}
	</select>
	
	<select id="checkSelectOnHandList" parameterType="Map" resultType="Integer">
		SELECT
			count(*)
		FROM
			on_hand_list_content
		WHERE
			onHandListSeq = #{seq}
		AND
			check_up = true
	</select>
	
	<select id="checkSelectOnHandListContentWeight" parameterType="Map" resultType="Integer">
		SELECT
			count(*)
		FROM
			on_hand_list_content_weight
		WHERE
			onHandListContentSeq = #{seq}
	</select>
	
	<insert id="insertOnHandList" parameterType="OnHandList">
		INSERT INTO
			on_hand_list
			(
				onHandDate, firstArrivalableDeliverDate, writeDate
			)
		VALUES
		(
			#{onHandDate}, #{firstArrivalableDeliverDate}, DATE_FORMAT(SYSDATE(), '%Y%m%d')
		)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<select id="getInboundInvoiceOnHandList" resultType="InboundInvoice">
		SELECT 
			il.seq, g.gblNo, g.shipperName AS name, g.ssn, g.rank, g.code, il.inboundInvoiceNo, il.invoiceDate, g.eta, il.declarationCheck, il.gblSeq
		FROM
			inbound_invoice_list il, gbl_ib g
		WHERE
			il.gblSeq = g.seq
		AND
			g.seq NOT IN (SELECT gblSeq FROM on_hand_list_content)
		AND
			il.seq IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight)
		AND
			il.declarationCheck = 1		
	</select>
	
	<select id="getOnHandInvoiceListAlreadyInsert" parameterType="Integer" resultType="InboundInvoice">
		SELECT 
			o.seq AS onHandListContentSeq, il.seq, g.gblNo, g.shipperName AS NAME, g.ssn, g.rank, g.code, il.inboundInvoiceNo, il.invoiceDate, g.eta, il.declarationCheck, il.gblSeq
		FROM
			inbound_invoice_list il, gbl_ib g, on_hand_list_content o
		WHERE
			il.gblSeq = g.seq
		AND
			o.gblSeq = g.seq
		AND
			g.seq IN (SELECT gblSeq FROM on_hand_list_content WHERE onHandListSeq = #{value})
		AND
			il.seq IN (SELECT DISTINCT inboundInvoiceSeq FROM inbound_invoice_weight)
		AND
			il.declarationCheck = 1	
	</select>
	
	<insert id="insertOnHandListContent" parameterType="OnHandListContent">
		INSERT INTO
			on_hand_list_content
			(
				gblSeq, onHandListSeq, check_up
			)
		VALUES
			(
				#{gblSeq}, #{onHandListSeq}, false
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID() 			
		</selectKey>
	</insert>
	
	<insert id="insertOnHandListContentWeight" parameterType="Map">
		INSERT INTO
			on_hand_list_content_weight
			(
				onHandListContentSeq, weightSeq
			)
		VALUES
			(
				#{onHandListContentSeq}, #{weightSeq}
			)
	</insert>
	
	<select id="getCheckWeightOnHandList" parameterType="Integer" resultType="Integer">
		SELECT
			weightSeq
		FROM
			on_hand_list_content_weight
		WHERE
			onHandListContentSeq = #{value}
	</select>
	
	<delete id="deleteOnHandListContentWeight" parameterType="Integer">
		DELETE FROM
			on_hand_list_content_weight
		WHERE
			onHandListContentSeq = #{value}
	</delete>
	
	<delete id="deleteOnHandListContent" parameterType="Integer">
		DELETE FROM
			on_hand_list_content
		WHERE
			seq = #{value}	
	</delete>
	
	<update id="updateOnHandListContent" parameterType="Map">
		UPDATE
			on_hand_list_content
		SET
			check_up = 1
		WHERE
			onHandListSeq = #{seq}
	</update>
	
	<delete id="deleteOnHandList" parameterType="Map">
		DELETE FROM
			on_hand_list
		WHERE
			seq = #{seq}
	</delete>
	
	<!-- comfirm -->
		
	<select id="getAdditionList" parameterType="Integer" resultType="Addition">
		SELECT
			seq, title, cost, price, gbl_seq AS gblSeq
		FROM
			decide_ib
		WHERE
			gbl_seq = #{value}
	</select>
</mapper>
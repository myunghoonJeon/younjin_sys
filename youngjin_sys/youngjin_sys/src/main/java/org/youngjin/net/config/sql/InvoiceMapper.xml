<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="invoiceMapper">
	<resultMap type="Invoice" id="InvoiceMap">
		<result column="seq" property="seq"/>
		<result column="invoice_no" property="invoiceNo"/>
		<result column="tsp" property="tsp"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="write_date" property="writeDate"/>
		<result column="complete" property="complete"/>
		<result column="amount" property="amount"/>
	</resultMap>

	<resultMap type="GBL" id="GblMap">
		<result column="seq" property="seq" />
		<result column="no" property="no" />
		<result column="pud" property="pud" />
		<result column="rank" property="rank" />
		<result column="code" property="code" />
		<result column="scac" property="scac" />
		<result column="ssn" property="ssn" />
		<result column="customer_name" property="customerName" />
		<result column="area" property="areaLocal" />
		<result column="us_no" property="usNo" />
		<result column="dest_port" property="destPort"/>
		<result column="origin_gblock" property="originGBlock"/>
		<result column="dest_gblock" property="destGBlock"/>
		<result column="rdd" property="rdd"/>
		<result column="pod" property="pod"/>
		<result column="poe" property="poe"/>
		<result column="origin_address" property="originAddress"/>
		<result column="origin_port" property="originPort"/>
		<result column="origin_city" property="originCity"/>
		<result column="mil_svc" property="milSVC"/>
		<result column="etd" property="etd"/>
		<result column="eta" property="eta"/>
		<result column="bl_no" property="blNo"/>
		<result column="pcs" property="pcs" />
		<result column="lbs" property="lbs" />
		<result column="cuft" property="cuft" />
		<result column="truck_check" property="truckCheck"/>
		<result column="booking_check" property="bookingCheck"/>
	</resultMap>
	
	<resultMap type="InvoiceGbl" id="InvoiceGblMap">
		<result column="seq" property="seq" />
		<result column="invoice_list_seq" property="invoiceListSeq" />
		<result column="gbl_seq" property="gblSeq" />
		<result column="gbl_no" property="gblNo" />
		<result column="rank" property="rank" />
		<result column="name" property="name" />
		<result column="amount" property="amount" />
		<result column="complete" property="complete" />
		<result column="scac" property="tsp" />
		<result column="pud" property="pud" />
	</resultMap>
	
	<resultMap type="InvoiceGbl" id="InvoiceInfoMap">
		<result column="invoice_list_seq" property="invoiceListSeq" />
		<result column="tsp" property="invoice.tsp"/>
		<result column="process" property="invoice.process" />
		<result column="gbl_no" property="gblNo"/>
		<result column="rank" property="rank" />
		<result column="name" property="name" />
		<result column="code" property="code" />
		<result column="remark" property="remark" />
	</resultMap>
	
	<select id="getInvoicesttingGblListCount" parameterType="OutboundFilter" resultType="Integer">			
		SELECT 
			count(*) AS count
		FROM 
			gbl g
		WHERE
			 g.seq IN (
				SELECT
					seq
				FROM
					gbl g1, gbl_status g2
				WHERE
					g1.no = g2.gbl_no
				AND
					g2.gbl_preperation = TRUE
				AND
					g2.gbl_truckmanifast = TRUE
				AND
					g2.gbl_bookingList = TRUE
				AND
					g2.gbl_invoice = FALSE
				
			)
		<if test="area != null and area != ''">
			AND
				area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
		</if>
		<if test="branch != null and branch != ''">
			AND		
				area = #{branch}			
		</if>
		<if test="carrier != null and carrier != ''">
			AND
				scac = #{carrier}
		</if>
		<if test="code != null and code != ''">
			AND
				code = #{code}
		</if>
		<if test="startPud != null and startPud != ''">
			AND
				pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
		</if>
		<if test="endPud != null and endPud != ''">
			AND
				pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
		</if>
		<if test="truckManifastFlag == false">
			AND
				no NOT LIKE '%-sub%'
		</if>
		<if test="truckManifastFlag == true">
			OR
				no LIKE '%-sub%'
		</if>			
	</select>
	
	<select id="getInvoiceSettingGblList" parameterType="OutboundFilter" resultMap="GblMap">				
		SELECT 
			gt.*, cuft, pcs
		FROM 
			(SELECT
				g.no, w.booking_check, SUM(w.cuft) AS cuft, COUNT(w.piece) AS pcs 
			FROM gbl g, weight_certificate w
			WHERE g.seq = w.gbl_seq
			<if test="area != null and area != ''">
				AND
					g.area = (select code_etc from symbol where main_code = '01' and sub_code = #{area})
			</if>
			<if test="branch != null and branch != ''">
				AND		
					g.area = #{branch}			
			</if>
			<if test="carrier != null and carrier != ''">
				AND
					g.scac = #{carrier}
			</if>
			<if test="code != null and code != ''">
				AND
					g.code = #{code}
			</if>
			<if test="startPud != null and startPud != ''">
				AND
					g.pud &gt;= str_to_date(#{startPud}, '%Y%m%d')
			</if>
			<if test="endPud != null and endPud != ''">
				AND
					g.pud &lt;= str_to_date(#{endPud}, '%Y%m%d')
			</if>
			<if test="truckManifastFlag == false">
				AND
					g.no NOT LIKE '%-sub%'
			</if>
			<if test="truckManifastFlag == true">
				OR
					g.no LIKE '%-sub%'
			</if>
			AND g.seq IN (
				SELECT
					seq
				FROM
					gbl g1, gbl_status g2
				WHERE
					g1.no = g2.gbl_no
				AND
					g2.gbl_preperation = TRUE
				AND
					g2.gbl_truckmanifast = TRUE
				AND
					g2.gbl_bookingList = TRUE
				AND
					g2.gbl_invoice = FALSE
				
			)		
			GROUP BY g.no, w.truck_check
			) a, gbl gt
		WHERE
			gt.no = a.no
		ORDER BY
			gt.pud	
	</select>
	
	<select id="getInvoiceSettingGblContent" parameterType="String" resultMap="InvoiceGblMap">		
		SELECT
			g.seq AS gbl_seq, g.no AS gbl_no, g.rank, g.customer_name AS name, g.scac, g.pud 
		FROM
			gbl g, gbl_status gs
		WHERE
			g.seq = #{value}
		AND
			g.no = gs.gbl_no
		AND
			gs.gbl_invoice = false
		AND
			gs.gbl_truckmanifast = true
		AND
			gs.gbl_bookingList = true			
	</select>
	
	<select id="checkTodayInvoiceNo" resultType="String">
		SELECT
			invoice_no
		FROM
			invoice_list
		WHERE
			DATE_FORMAT(write_date, '%Y%m%d') = DATE_FORMAT(SYSDATE(), '%Y%m%d')
	</select>
	
	<select id="getSitListCount" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			invoice_sit_rate
		WHERE
			write_year = DATE_FORMAT(SYSDATE(), '%Y')
	</select>
	
	<select id="getSitList" parameterType="Rate" resultType="Rate">
		SELECT
			seq, title, code, process, rate, write_year AS writeYear
		FROM
			invoice_sit_rate
		WHERE
			<choose>
				<when test="writeYear != null">
					write_year = #{writeYear}
				</when>
				<otherwise>
					write_year = DATE_FORMAT(SYSDATE(), '%Y')				
				</otherwise>
			</choose>			
		ORDER BY
			seq, process DESC
	</select>
	
	<select id="getSit" parameterType="Rate" resultType="Rate">
		SELECT
			seq, title, code, process, rate, write_year AS writeYear
		FROM
			invoice_sit_rate
		WHERE
			write_year = DATE_FORMAT(#{writeYear}, '%Y')
		AND
			title = #{title}
		AND
			process = #{process}
	</select>
	
	<select id="getOtherListCount" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			invoice_other_rate
		WHERE
			write_year = DATE_FORMAT(SYSDATE(), '%Y')
	</select>
	
	<select id="getOtherList" parameterType="Rate" resultType="Rate">
		SELECT
			seq, title, code, process, rate, write_year AS writeYear
		FROM
			invoice_other_rate
		WHERE
			<choose>
				<when test="writeYear != null">
					write_year = #{writeYear}
				</when>
				<otherwise>
					write_year = DATE_FORMAT(SYSDATE(), '%Y')				
				</otherwise>
			</choose>			
		ORDER BY
			seq, process DESC		
	</select>	
	
	<select id="getOther" parameterType="Rate" resultType="Rate">
		SELECT
			seq, title, code, process, rate, write_year AS writeYear
		FROM
			invoice_other_rate
		WHERE
			write_year = DATE_FORMAT(#{writeYear}, '%Y')
		AND
			title = #{title}
		AND
			code = #{code}		
		AND
			process = #{process}
	</select>
	
	<select id="getBasicRateCheck" parameterType="Rate" resultType="Integer">
		SELECT
			count(*)
		FROM
			invoice_rate
		WHERE
			tsp = #{tsp}
		AND
			code = #{code}
		AND
			process = #{process}
		AND
			write_year = DATE_FORMAT(SYSDATE(), '%Y')			
		<if test="obType != null">
			AND
				ob_type = #{obType}
		</if>
	</select>
	
	<select id="getBasicRateList" parameterType="Rate" resultType="Rate">
		SELECT
			seq, tsp, code, rate, process, ob_type AS obType, write_year AS writeYear
		FROM
			invoice_rate
		WHERE
			write_year = DATE_FORMAT(SYSDATE(), '%Y')
		AND
			container_rate is null
		ORDER BY
			process, tsp, code
	</select>
	
	<select id="getBasicRate" parameterType="Rate" resultType="Rate">
		SELECT
			seq, tsp, code, rate, process, ob_type AS obType, write_year AS writeYear
		FROM
			invoice_rate
		WHERE
			write_year = DATE_FORMAT(#{writeYear}, '%Y')
		AND
			tsp = #{tsp}
		AND
			code = #{code}
		AND
			process = #{process}			
		<if test="obType != null">
			AND
				ob_type = #{obType}
		</if>					
	</select>
	
	<select id="getContainerCheck" parameterType="Rate" resultType="Integer">
		SELECT
			count(*)
		FROM
			invoice_rate
		WHERE
			tsp = #{tsp}
		AND
			container_status = #{containerStatus}
		AND
			write_year = DATE_FORMAT(SYSDATE(), '%Y')	
	</select>
	
	<select id="getEtcCheck" parameterType="Rate" resultType="Integer">
		SELECT
			count(*)
		FROM
			invoice_etc_rate
		WHERE
			title = #{title}
		AND
			write_year = DATE_FORMAT(SYSDATE(), '%Y')
	</select>
	
	<select id="etcList" parameterType="Rate" resultType="Rate">
		SELECT
			seq, title, rate, write_year
		FROM
			invoice_etc_rate
		WHERE
			write_year = DATE_FORMAT(SYSDATE(), '%Y')
	</select>
	
	<select id="getEtc" parameterType="Map" resultType="Rate">
		SELECT
			seq, title, rate, write_year
		FROM
			invoice_etc_rate
		WHERE
			write_year = DATE_FORMAT(#{pud}, '%Y')
		AND
			title = #{title}
			
	</select>
	
	<select id="getContainerRateList" parameterType="Rate" resultType="Rate">
		SELECT
			seq, tsp, container_status AS containerStatus, container_rate AS containerRate, write_year AS writeYear
		FROM
			invoice_rate
		WHERE
			write_year = DATE_FORMAT(SYSDATE(), '%Y')
		AND
			container_rate is not null
		ORDER BY
			process, tsp, code
	</select>	
	
	<select id="getContainerRate" parameterType="Rate" resultType="Rate">	
		SELECT
			seq, tsp, container_status AS containerStatus, container_rate AS containerRate, write_year AS writeYear
		FROM
			invoice_rate
		WHERE
			write_year = DATE_FORMAT(#{writeYear}, '%Y')
		AND
			tsp = #{tsp}
		AND
			container_status = #{containerStatus}
	</select>
	
	<select id="getInvoiceListCount" parameterType="InvoiceFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			invoice_list
		WHERE
			1 = 1
		<if test="tsp != null and tsp != ''">
			AND
				tsp = #{tsp}
		</if>			
		<if test="startDate != null and startDate != ''">
			AND
				start_date &gt;= str_to_date(#{startDate}, '%Y%m%d')
		</if>
		<if test="endDate != null and endDate != ''">
			AND
				end_date &lt;= str_to_date(#{endDate}, '%Y%m%d')
		</if>
	</select>
	
	<select id="getInvoiceList" parameterType="InvoiceFilter" resultMap="InvoiceMap">
		SELECT 
			*
		FROM	
		(
			SELECT
				(@rownum := @rownum + 1) AS rownum,
				i.seq, i.invoice_no, i.tsp, i.start_date, i.end_date, i.write_date, i.complete, i.amount
			FROM
				invoice_list i, (SELECT @rownum := 0) r
			WHERE
				1 = 1
			<if test="tsp != null and tsp != ''">
				AND
					tsp = #{tsp}
			</if>			
			<if test="startDate != null and startDate != ''">
				AND
					start_date &gt;= str_to_date(#{startDate}, '%Y%m%d')
			</if>
			<if test="endDate != null and endDate != ''">
				AND
					end_date &lt;= str_to_date(#{endDate}, '%Y%m%d')
			</if>
			ORDER BY
				i.seq
		) il
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}
	</select>
	
	<select id="getSettingGblList" parameterType="Invoice" resultMap="InvoiceGblMap">		
		SELECT
			g.seq AS gbl_seq, g.no AS gbl_no, g.rank, g.customer_name AS name 
		FROM
			gbl g, gbl_status gs
		WHERE
			g.scac = #{tsp}
		AND
			g.pud BETWEEN #{startDate} and #{endDate}
		AND
			g.no = gs.gbl_no
		AND
			gs.gbl_invoice = false
		AND
			gs.gbl_truckmanifast = true
		AND
			gs.gbl_bookingList = true		
	</select>
	
	<select id="getInvoice" parameterType="Invoice" resultMap="InvoiceMap">
		SELECT
			seq, tsp, start_date, end_date, write_date, complete
		FROM
			invoice_list
		WHERE
			seq = #{seq}
	</select>
	
	<select id="getInvoiceGblList" parameterType="Integer" resultMap="InvoiceGblMap">
		SELECT
			seq, invoice_list_seq, gbl_seq, gbl_no, rank, name, amount, complete
		FROM
			invoice_gbl
		WHERE
			invoice_list_seq = #{value}
	</select>
	
	<select id="getInvoiceGblListbyInvoice" parameterType="Invoice" resultMap="InvoiceGblMap">
		SELECT
			seq, invoice_list_seq, gbl_seq, gbl_no, rank, name, amount, complete
		FROM
			invoice_gbl
		WHERE
			invoice_list_seq = #{seq}
	</select>
	
	<select id="getInvoiceGblContentCount" parameterType="Integer" resultType="Integer">
		SELECT
			count(*)
		FROM
			invoice_gbl_content
		WHERE
			invoice_gbl_seq = #{value}
	</select>
	
	<select id="getTotalWeightCertificate" parameterType="Integer" resultType="WeightCertificate">		
        SELECT
        	seq,
        	piece,
        	type,
        	status,
        	SUM(gross) gross,
        	SUM(tare) tare,
        	SUM(net) net,
        	remark,
        	gbl_seq AS gblSeq,
        	DATE AS DATE,
        	truck_check AS truckCheck,
        	truck_seq AS truckSeq
        FROM
        	weight_certificate
        WHERE
			gbl_seq = #{value}
		GROUP BY
			gbl_seq
	</select>
	
	<select id="checkInvoiceContent" parameterType="InvoiceGblContent" resultType="Integer">
		SELECT
			seq
		FROM
			invoice_gbl_content
		WHERE
			invoice_gbl_seq = #{invoiceGblSeq}
		AND
			charging_item = #{chargingItem}
	</select>
	
	<select id="getInvoiceGblContentInfo" parameterType="Integer" resultMap="InvoiceInfoMap">
		SELECT
			ig.invoice_list_seq, i.tsp, i.process, ig.gbl_no, ig.rank, ig.name, g.code, ig.remark
		FROM
			invoice_list i, invoice_gbl ig, gbl g
		WHERE
			ig.invoice_list_seq = i.seq
		AND
			g.seq = ig.gbl_seq
		AND
			ig.seq = #{value}
	</select>
	
	<select id="getCarrierList" resultType="Code">
		SELECT DISTINCT
			tsp AS subCode
		FROM
			invoice_list	
	</select>
	
	<select id="getInvoiceCollectionListCount" parameterType="InvoiceFilter" resultType="Integer">
		SELECT
			count(*)
		FROM
			invoice_list
		WHERE
			amount IS NOT NULL
		<if test="tsp != null and tsp != ''">
			AND
				tsp = #{tsp}
		</if>			
		<if test="startDate != null and startDate != ''">
			AND
				start_date &gt;= str_to_date(#{startDate}, '%Y%m%d')
		</if>
		<if test="endDate != null and endDate != ''">
			AND
				end_date &lt;= str_to_date(#{endDate}, '%Y%m%d')
		</if>
	</select>
	
	<select id="getInvoicecollectionList" parameterType="InvoiceFilter" resultMap="InvoiceMap">
		SELECT 
			*
		FROM	
		(
			SELECT
				(@rownum := @rownum + 1) AS rownum,
				i.seq, i.invoice_no, i.tsp, i.start_date, i.end_date, i.write_date, i.complete, i.amount
			FROM
				invoice_list i, (SELECT @rownum := 0) r
			WHERE
				amount IS NOT NULL
			<if test="tsp != null and tsp != ''">
				AND
					tsp = #{tsp}
			</if>			
			<if test="startDate != null and startDate != ''">
				AND
					start_date &gt;= str_to_date(#{startDate}, '%Y%m%d')
			</if>
			<if test="endDate != null and endDate != ''">
				AND
					end_date &lt;= str_to_date(#{endDate}, '%Y%m%d')
			</if>
			ORDER BY
				i.seq
		) il
		WHERE rownum BETWEEN #{pagination.itemSeqBegin} AND #{pagination.itemSeqEnd}
		
	</select>
	
	<resultMap type="InvoiceCollection" id="InvoiceCollectionMap">
		<result column="seq" property="seq"/>
		<result column="state" property="state"/>
		<result column="net" property="net"/>
		<result column="remark" property="remark"/>
		<result column="invoice_seq" property="invoiceSeq"/>
		<collection property="invoiceColltionFlowList" column="seq" javaType="ArrayList" ofType="InvoiceCollectionFlow" select="getInvoiceCollectionFlow" /> 
	</resultMap>
	
	<resultMap type="InvoiceCollection" id="InvoiceCollectionGblMap">
		<result column="seq" property="seq"/>
		<result column="state" property="state"/>
		<result column="net" property="net"/>
		<result column="remark" property="remark"/>
		<result column="invoice_seq" property="invoiceSeq"/>
		<collection property="invoiceColltionFlowList" column="seq" javaType="ArrayList" ofType="InvoiceCollectionFlow" select="getInvoiceCollectionGblFlow" /> 
	</resultMap>
	
	<select id="getInvoiceCollectionListAndFlow" parameterType="InvoiceFilter" resultMap="InvoiceCollectionMap">
		SELECT
			ic.seq, ic.state, ic.net, ic.difference, ic.remark, ic.invoice_seq
		FROM
			invoice_collection ic, invoice_list il
		WHERE
			ic.invoice_seq = il.seq
		<if test="tsp != null and tsp != ''">
			AND
				tsp = #{tsp}
		</if>			
		<if test="startDate != null and startDate != ''">
			AND
				start_date &gt;= str_to_date(#{startDate}, '%Y%m%d')
		</if>
		<if test="endDate != null and endDate != ''">
			AND
				end_date &lt;= str_to_date(#{endDate}, '%Y%m%d')
		</if>
	</select>
	
	<select id="getInvoiceCollectionFlow" resultType="InvoiceCollectionFlow">
		SELECT
			seq, amount, state, remark, write_date AS writeDate, invoice_collection_seq AS invoiceCollectionSeq
		FROM
			invoice_collection_flow
		WHERE
			invoice_collection_seq = #{seq}
	</select>
	
	<select id="checkAndGetCollectionSeq" parameterType="Integer" resultType="InvoiceCollection">
		SELECT
			seq, state, net, difference, invoice_seq AS invoiceSeq, remark
		FROM
			invoice_collection
		WHERE
			invoice_seq = #{value}
	</select>
	
	<select id="getInvoiceCollectionGblListAndFlow" parameterType="Integer" resultMap="InvoiceCollectionGblMap">
		SELECT
			ic.seq, ic.state, ic.net, ic.difference, ic.remark, ic.invoice_gbl_seq AS invoiceSeq
		FROM
			invoice_gbl_collection ic, invoice_gbl ig
		WHERE
			ic.invoice_gbl_seq = ig.seq
		AND
			ig.invoice_list_seq = #{value}		
	</select>
	
	<select id="getInvoiceCollectionGblFlow" resultType="InvoiceCollectionFlow">
		SELECT
			seq, amount, state, remark, write_date AS writeDate, invoice_gbl_collection_seq AS invoiceCollectionSeq
		FROM
			invoice_gbl_collection_flow
		WHERE
			invoice_gbl_collection_seq = #{seq}
	</select>
	
	<select id="checkAndGetGblCollectionSeq" parameterType="Integer" resultType="InvoiceCollection">
		SELECT
			seq, state, net, difference, invoice_gbl_seq AS invoiceSeq, remark
		FROM
			invoice_gbl_collection
		WHERE
			invoice_gbl_seq = #{value}
	</select>
	
	<insert id="insertNewYearSIT" parameterType="Map">
		INSERT INTO
			invoice_sit_rate
			(
				title, code, process, write_year
			)
		VALUES
			<foreach collection="rateList" item="rate" separator=",">
				(#{rate.title}, #{rate.code}, #{rate.process}, DATE_FORMAT(SYSDATE(), '%Y'))
			</foreach>
	</insert>
	
	<insert id="insertNewYearOther" parameterType="Map">
		INSERT INTO
			invoice_other_rate
			(
				title, code, process, write_year
			)
		VALUES
			<foreach collection="rateList" item="rate" separator=",">
				(#{rate.title}, #{rate.code}, #{rate.process}, DATE_FORMAT(SYSDATE(), '%Y'))
			</foreach>
	</insert>
	
	<insert id="basicInsert" parameterType="Rate">
		INSERT INTO
			invoice_rate
			(
				tsp, code, rate, process, write_year
				<if test="obType != null">
					, ob_type
				</if>
			)
		VALUES
			(
				#{tsp}, #{code}, #{rate}, #{process}, DATE_FORMAT(SYSDATE(), '%Y')
				
				<if test="obType != null">
					, #{obType}
				</if>
			)
	</insert>
	
	<insert id="etcInsert" parameterType="Rate">
		INSERT INTO
			invoice_etc_rate
			(
				title, rate, write_year
			)
		VALUES
			(
				#{title}, #{rate}, DATE_FORMAT(SYSDATE(), '%Y')
			)
	</insert>
	
	<insert id="containerInsert" parameterType="Rate">
		INSERT INTO
			invoice_rate
			(
				tsp, container_rate, container_status, write_year
			)
		VALUES
			(
				#{tsp}, #{containerRate}, #{containerStatus}, DATE_FORMAT(SYSDATE(), '%Y')
			)
	</insert>
	
	<insert id="insertInvoice" parameterType="Invoice">
		INSERT INTO
			invoice_list
			(
				invoice_no, tsp, start_date, end_date, write_date, complete, process
			)
		VALUES
			(
				#{invoiceNo}, #{tsp}, #{startDate}, #{endDate}, SYSDATE(), 0, #{process}
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID()  
		</selectKey>
	</insert>
	
	<insert id="insertInvoiceGbl" parameterType="InvoiceGbl">
		INSERT INTO
			invoice_gbl
			(
				invoice_list_seq, gbl_seq, gbl_no, rank, name, amount, complete
			)
		VALUES
			(
				#{invoiceListSeq}, #{gblSeq}, #{gblNo}, #{rank}, #{name}, 0, 0
			)
	</insert>
	
	<insert id="insertInvoiceGblContent" parameterType="InvoiceGblContent">
		INSERT INTO
			invoice_gbl_content
			(
				invoice_gbl_seq, charging_item, quantity, amount
			)
		VALUES
			(
				#{invoiceGblSeq}, #{chargingItem}, #{quantity}, #{amount}
			)
	</insert>
	
	<insert id="inputCollectionNet" parameterType="InvoiceCollection">
		INSERT INTO
			invoice_collection
			(
				state, net, difference, invoice_seq
			)
		VALUES
			(
				#{state}, #{net}, #{difference}, #{invoiceSeq}
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID()		
		</selectKey>
	</insert>
	
	<insert id="inputCollectionFlow" parameterType="InvoiceCollectionFlow">
		INSERT INTO
			invoice_collection_flow
			(
				amount, state, remark, write_date, invoice_collection_seq
			)
		VALUES
			(
				#{amount}, #{state}, #{remark}, SYSDATE(), #{invoiceCollectionSeq}
			)
	</insert>
	
	<insert id="inputGblCollectionNet" parameterType="InvoiceCollection">
		INSERT INTO
			invoice_gbl_collection
			(
				state, net, difference, invoice_gbl_seq
			)
		VALUES
			(
				#{state}, #{net}, #{difference}, #{invoiceSeq}
			)
		<selectKey keyProperty="seq" resultType="Integer">
			SELECT LAST_INSERT_ID()		
		</selectKey>
	</insert>
	
	<insert id="inputGblCollectionFlow" parameterType="InvoiceCollectionFlow">
		INSERT INTO
			invoice_gbl_collection_flow
			(
				amount, state, remark, write_date, invoice_gbl_collection_seq
			)
		VALUES
			(
				#{amount}, #{state}, #{remark}, SYSDATE(), #{invoiceCollectionSeq}
			)
	</insert>
	
	<update id="basicUpdate" parameterType="Rate">
		UPDATE
			invoice_rate
		SET
			rate = #{rate}
		WHERE
			tsp = #{tsp}
		AND
			code = #{code}
		AND
			process = #{process}
		AND
			write_year = DATE_FORMAT(SYSDATE(), '%Y')
		<if test="obType != null">
			AND
				ob_type = #{obType}
		</if>		
	</update>
	
	<update id="etcRateUpate" parameterType="Rate">
		UPDATE
			invoice_etc_rate
		SET
			rate = #{rate}
		WHERE
			title = #{title}
		AND
			write_year = DATE_FORMAT(SYSDATE(), 'Y%')
	</update>
	
	<update id="containerUpdate" parameterType="Rate">
		UPDATE
			invoice_rate
		SET
			container_rate = #{containerRate}
		WHERE
			tsp = #{tsp}
		AND
			container_status = #{containerStatus}		
	</update>
	
	<update id="sitUpdate" parameterType="Rate">
		UPDATE
			invoice_sit_rate
		SET
			rate = #{rate}
		WHERE
			seq = #{seq}
	</update>
	
	<update id="otherUpdate" parameterType="Rate">
		UPDATE
			invoice_other_rate
		SET
			rate = #{rate}
		WHERE
			seq = #{seq}
	</update>
	
	<update id="updateInvoiceGblContent" parameterType="InvoiceGblContent">
		UPDATE
			invoice_gbl_content
		SET
			amount = #{amount}
		WHERE
			seq = #{seq}
	</update>
	
	<update id="updateInvoiceGbl" parameterType="InvoiceGbl">
		UPDATE
			invoice_gbl
		SET
			amount = #{amount},
			complete = #{complete}
		WHERE
			seq = #{seq}
	</update>
	
	<update id="checkAndUpdateInvoice" parameterType="Integer">
		UPDATE
			invoice_list
		SET
			complete = true,
			amount = (SELECT
						SUM(amount)
					FROM
						invoice_gbl
					WHERE
						invoice_list_seq = #{value}
					GROUP BY invoice_list_seq)	
		WHERE
			seq = (
					SELECT * FROM
					(
						SELECT seq FROM invoice_list i
						WHERE seq = #{value} 
						AND	
						(	SELECT
								COUNT(*)
							FROM
								invoice_gbl
							WHERE
								invoice_list_seq = i.seq
						) = 
						(
							SELECT 
								COUNT(*)
							FROM
								invoice_gbl
							WHERE
								invoice_list_seq = i.seq
							AND
								complete = TRUE
						) 
					) AS ck
				)			
	</update>
	
	<update id="updateCollectionNet" parameterType="InvoiceCollection">
		UPDATE
			invoice_collection
		SET
			state = #{state},
			net = #{net},
			difference = #{difference}
		WHERE
			seq = #{seq}
	</update>
	
	<update id="updateGblCollectionNet" parameterType="InvoiceCollection">
		UPDATE
			invoice_gbl_collection
		SET
			state = #{state},
			net = #{net},
			difference = #{difference}
		WHERE
			seq = #{seq}
	</update>
	
	<update id="invoiceCollectionRemarkInput" parameterType="Map">
		UPDATE
			invoice_gbl
		SET
			remark = #{remark}
		WHERE
			seq = #{seq}
	</update>
	
	<delete id="deleteInvoice" parameterType="Invoice">
		DELETE FROM
			invoice_list
		WHERE
			seq = #{seq}
	</delete>
	
	<delete id="deleteInvoiceCollection" parameterType="String">
		DELETE FROM
			invoice_collection
		WHERE
			seq = #{value}
	</delete>
	
	<delete id="deleteInvoiceCollectionFlow" parameterType="String">
		DELETE FROM
			invoice_collection_flow
		WHERE
			seq = #{value}
	</delete>
	
	<delete id="deleteGblInvoiceCollection" parameterType="String">
		DELETE FROM
			invoice_gbl_collection
		WHERE
			seq = #{value}
	</delete>
	
	<delete id="deleteGblInvoiceCollectionFlow" parameterType="String">
		DELETE FROM
			invoice_gbl_collection_flow
		WHERE
			seq = #{value}
	</delete>
</mapper>